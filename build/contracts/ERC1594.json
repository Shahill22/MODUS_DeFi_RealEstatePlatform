{
  "contractName": "ERC1594",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "Issued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferWithData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferFromWithData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isIssuable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenHolder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "issue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenHolder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "redeemFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "canTransfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes1",
          "name": "",
          "type": "bytes1"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "canTransferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes1",
          "name": "",
          "type": "bytes1"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Issued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"canTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes1\",\"name\":\"\",\"type\":\"bytes1\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"canTransferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes1\",\"name\":\"\",\"type\":\"bytes1\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isIssuable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"issue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"redeemFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferFromWithData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferWithData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"returns\":{\"_0\":\"A uint256 specifying the amount of tokens still available for the spender.\"}},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"returns\":{\"_0\":\"An uint256 representing the amount owned by the passed address.\"}},\"canTransfer(address,uint256,bytes)\":{\"params\":{\"_data\":\"The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"},\"returns\":{\"_0\":\"bool It signifies whether the transaction will be executed or not.\",\"_1\":\"byte Ethereum status code (ESC)\",\"_2\":\"bytes32 Application specific reason code\"}},\"canTransferFrom(address,address,uint256,bytes)\":{\"params\":{\"_data\":\"The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\",\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"},\"returns\":{\"_0\":\"bool It signifies whether the transaction will be executed or not.\",\"_1\":\"byte Ethereum status code (ESC)\",\"_2\":\"bytes32 Application specific reason code\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"isIssuable()\":{\"details\":\"If a token returns FALSE for `isIssuable()` then it MUST always return FALSE in the future. If a token returns FALSE for `isIssuable()` then it MUST never allow additional tokens to be issued.\",\"returns\":{\"_0\":\"bool `true` signifies the minting is allowed. While `false` denotes the end of minting\"}},\"issue(address,uint256,bytes)\":{\"details\":\"It only be called by the token issuer or the operator defined by the issuer. ERC1594 doesn't have have the any logic related to operator but its superset ERC1400 have the operator logic and this function is allowed to call by the operator.\",\"params\":{\"_data\":\"The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\",\"_tokenHolder\":\"The account that will receive the created tokens (account should be whitelisted or KYCed).\",\"_value\":\"The amount of tokens need to be issued\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"redeem(uint256,bytes)\":{\"params\":{\"_data\":\"The `bytes _data` it can be used in the token contract to authenticate the redemption.\",\"_value\":\"The amount of tokens need to be redeemed\"}},\"redeemFrom(address,uint256,bytes)\":{\"details\":\"It is analogy to `transferFrom`\",\"params\":{\"_data\":\"The `bytes _data` it can be used in the token contract to authenticate the redemption.\",\"_tokenHolder\":\"The account whose tokens gets redeemed.\",\"_value\":\"The amount of tokens need to be redeemed\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}},\"transferFromWithData(address,address,uint256,bytes)\":{\"details\":\"`msg.sender` MUST have a sufficient `allowance` set and this `allowance` must be debited by the `_value`.\",\"params\":{\"_data\":\"The `bytes _data` allows arbitrary data to be submitted alongside the transfer. for the token contract to interpret or record. This could be signed data authorising the transfer (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\",\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferWithData(address,uint256,bytes)\":{\"params\":{\"_data\":\"The `bytes _data` allows arbitrary data to be submitted alongside the transfer. for the token contract to interpret or record. This could be signed data authorising the transfer (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"Standard implementation of ERC1594 (Subset of ERC1400 https://github.com/ethereum/EIPs/issues/1411)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canTransfer(address,uint256,bytes)\":{\"notice\":\"Transfers of securities may fail for a number of reasons. So this function will used to understand the cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\"},\"canTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers of securities may fail for a number of reasons. So this function will used to understand the cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\"},\"constructor\":{\"notice\":\"Constructor\"},\"isIssuable()\":{\"notice\":\"A security token issuer can specify that issuance has finished for the token (i.e. no new tokens can be minted or issued).\"},\"issue(address,uint256,bytes)\":{\"notice\":\"This function must be called to increase the total supply (Corresponds to mint function of ERC20).\"},\"redeem(uint256,bytes)\":{\"notice\":\"This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize using different ways that could be implemented with in the `redeem` function definition. But those implementations are out of the scope of the ERC1594.\"},\"redeemFrom(address,uint256,bytes)\":{\"notice\":\"This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize using different ways that could be implemented with in the `redeem` function definition. But those implementations are out of the scope of the ERC1594.\"},\"transferFromWithData(address,address,uint256,bytes)\":{\"notice\":\"Transfer restrictions can take many forms and typically involve on-chain rules or whitelists. However for many types of approved transfers, maintaining an on-chain list of approved transfers can be cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder approving a token transfer, and authorised entity provides signed data which further validates the transfer.\"},\"transferWithData(address,uint256,bytes)\":{\"notice\":\"Transfer restrictions can take many forms and typically involve on-chain rules or whitelists. However for many types of approved transfers, maintaining an on-chain list of approved transfers can be cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder approving a token transfer, and authorised entity provides signed data which further validates the transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tokens/ERC1594.sol\":\"ERC1594\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/interfaces/IERC1594.sol\":{\"keccak256\":\"0x57363574736ddcb7bfe2ffd68a80a8673938841fb2797eb1089b0d18d6ce035b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8d7eea7759db9a85b045cae736e3894ef909d3005423a020686745e2d658493\",\"dweb:/ipfs/QmaLUxvUVzVVftQEWz81FJGseephPMzEH9q98MdZMQq7vB\"]},\"project:/contracts/math/KindMath.sol\":{\"keccak256\":\"0x09247ce11f8b0b1d7bffc0f1d8a8d73d24bba3882a01a528e954b7fd3de017c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7c90fa2ee0c2cc31c35424aefbb0e1e6388feaecbe3792fe0812cb693b77598\",\"dweb:/ipfs/QmTQJVqEFnxLMUiu8ScT7YdiTaph2S85kLWMUpHo55yGCJ\"]},\"project:/contracts/tokens/ERC1594.sol\":{\"keccak256\":\"0xb5f77df8141daeefe97dc65834961c11ea9d59a3afd55ba7538ce291ce17438f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b52abf40792bea51904d6f41c9f6f33f6fd6b6a43c36ec0c86a9024b299f4cd\",\"dweb:/ipfs/Qma86q79eKxat5KnhTnciRysuoxqC9rvj25ggwRM8bU6QY\"]},\"project:/contracts/tokens/ERC20Token.sol\":{\"keccak256\":\"0x8b064503c8e1284ffac8b3ade017a4e46f0265830d0ed9a145374ccc897b1c6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9b8d0b32e31ec1ccd91adf1ac6f465f3b116023293fd8d90e0ee2d2a9c929aa\",\"dweb:/ipfs/QmRw1iSce9vjQXXiooh3kFHr6Jo91gXHM6Qk1rmfCm2csA\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600360146101000a81548160ff02191690831515021790555034801561002b57600080fd5b5061004861003d61004d60201b60201c565b61005560201b60201c565b61011b565b600033905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612279806200012b6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063bb3acde911610071578063bb3acde914610346578063dd62ed3e14610362578063e77c646d14610392578063ee532f31146103ae578063f2fde38b146103ca57610121565b8063715018a6146102a25780638da5cb5b146102ac5780639675193c146102ca578063a457c2d7146102e6578063a9059cbb1461031657610121565b806323b872dd116100f457806323b872dd146101d85780632535f762146102085780632f1cae8514610224578063395093511461024257806370a082311461027257610121565b8063095ea7b314610126578063122eb5751461015657806318160ddd146101885780631badb25c146101a6575b600080fd5b610140600480360381019061013b9190611ad9565b6103e6565b60405161014d9190611b34565b60405180910390f35b610170600480360381019061016b9190611c95565b610510565b60405161017f93929190611d6c565b60405180910390f35b6101906106e2565b60405161019d9190611db2565b60405180910390f35b6101c060048036038101906101bb9190611dcd565b6106ec565b6040516101cf93929190611d6c565b60405180910390f35b6101f260048036038101906101ed9190611e3c565b610820565b6040516101ff9190611b34565b60405180910390f35b610222600480360381019061021d9190611dcd565b610839565b005b61022c610849565b6040516102399190611b34565b60405180910390f35b61025c60048036038101906102579190611ad9565b610860565b6040516102699190611b34565b60405180910390f35b61028c60048036038101906102879190611e8f565b610a94565b6040516102999190611db2565b60405180910390f35b6102aa610adc565b005b6102b4610af0565b6040516102c19190611ecb565b60405180910390f35b6102e460048036038101906102df9190611dcd565b610b1a565b005b61030060048036038101906102fb9190611ad9565b610b90565b60405161030d9190611b34565b60405180910390f35b610330600480360381019061032b9190611ad9565b610dc4565b60405161033d9190611b34565b60405180910390f35b610360600480360381019061035b9190611dcd565b610ddb565b005b61037c60048036038101906103779190611ee6565b610ea8565b6040516103899190611db2565b60405180910390f35b6103ac60048036038101906103a79190611f26565b610f2f565b005b6103c860048036038101906103c39190611c95565b610fa5565b005b6103e460048036038101906103df9190611e8f565b610fb7565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361042057600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104fe9190611db2565b60405180910390a36001905092915050565b6000806000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548511156105b257600060536000801b8160f81b91509250925092506106d8565b846000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561061157600060526000801b8160f81b91509250925092506106d8565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff160361065e57600060576000801b8160f81b91509250925092506106d8565b6106a66000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548661103a565b6106c357600060506000801b8160f81b91509250925092506106d8565b600160516000801b8160f81b91509250925092505b9450945094915050565b6000600254905090565b6000806000846000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561075057600060526000801b8160f81b9150925092509250610817565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff160361079d57600060576000801b8160f81b9150925092509250610817565b6107e56000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548661103a565b61080257600060506000801b8160f81b9150925092509250610817565b600160516000801b8160f81b91509250925092505b93509350939050565b600061082e33858585611069565b600190509392505050565b610844338484611212565b505050565b6000600360149054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361089a57600080fd5b61092982600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142690919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610a829190611db2565b60405180910390a36001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610ae461143c565b610aee60006114ba565b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b248383611580565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fb7d0d6b60740753e9f16692a2f479472a1385aec2420fa43225b02f2ffa1afe78484604051610b83929190612001565b60405180910390a3505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bca57600080fd5b610c5982600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172690919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610db29190611db2565b60405180910390a36001905092915050565b6000610dd1338484611212565b6001905092915050565b610de361143c565b600360149054906101000a900460ff16610e32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e299061208e565b60405180910390fd5b610e3c838361173c565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0e9905d62635f049c2f4e11678ebf9dc3d1f8c4a653e290759b772e47ba00d008484604051610e9b929190612001565b60405180910390a3505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610f39338361188d565b3373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fb7d0d6b60740753e9f16692a2f479472a1385aec2420fa43225b02f2ffa1afe78484604051610f99929190612001565b60405180910390a35050565b610fb133858585611069565b50505050565b610fbf61143c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361102e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102590612120565b60405180910390fd5b611037816114ba565b50565b6000808284611049919061216f565b90508381101561105d576000915050611063565b60019150505b92915050565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156110f257600080fd5b61118181600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172690919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061120c838383611212565b50505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111561125d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361129657600080fd5b6112e7816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172690919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061137a816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142690919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114199190611db2565b60405180910390a3505050565b60008183611434919061216f565b905092915050565b611444611a29565b73ffffffffffffffffffffffffffffffffffffffff16611462610af0565b73ffffffffffffffffffffffffffffffffffffffff16146114b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114af906121ef565b60405180910390fd5b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111561160957600080fd5b61169881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172690919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611722828261188d565b5050565b60008183611734919061220f565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361177557600080fd5b61178a8160025461142690919063ffffffff16565b6002819055506117e1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142690919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118819190611db2565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118c657600080fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111561191157600080fd5b6119268160025461172690919063ffffffff16565b60028190555061197d816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172690919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611a1d9190611db2565b60405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a7082611a45565b9050919050565b611a8081611a65565b8114611a8b57600080fd5b50565b600081359050611a9d81611a77565b92915050565b6000819050919050565b611ab681611aa3565b8114611ac157600080fd5b50565b600081359050611ad381611aad565b92915050565b60008060408385031215611af057611aef611a3b565b5b6000611afe85828601611a8e565b9250506020611b0f85828601611ac4565b9150509250929050565b60008115159050919050565b611b2e81611b19565b82525050565b6000602082019050611b496000830184611b25565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611ba282611b59565b810181811067ffffffffffffffff82111715611bc157611bc0611b6a565b5b80604052505050565b6000611bd4611a31565b9050611be08282611b99565b919050565b600067ffffffffffffffff821115611c0057611bff611b6a565b5b611c0982611b59565b9050602081019050919050565b82818337600083830152505050565b6000611c38611c3384611be5565b611bca565b905082815260208101848484011115611c5457611c53611b54565b5b611c5f848285611c16565b509392505050565b600082601f830112611c7c57611c7b611b4f565b5b8135611c8c848260208601611c25565b91505092915050565b60008060008060808587031215611caf57611cae611a3b565b5b6000611cbd87828801611a8e565b9450506020611cce87828801611a8e565b9350506040611cdf87828801611ac4565b925050606085013567ffffffffffffffff811115611d0057611cff611a40565b5b611d0c87828801611c67565b91505092959194509250565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611d4d81611d18565b82525050565b6000819050919050565b611d6681611d53565b82525050565b6000606082019050611d816000830186611b25565b611d8e6020830185611d44565b611d9b6040830184611d5d565b949350505050565b611dac81611aa3565b82525050565b6000602082019050611dc76000830184611da3565b92915050565b600080600060608486031215611de657611de5611a3b565b5b6000611df486828701611a8e565b9350506020611e0586828701611ac4565b925050604084013567ffffffffffffffff811115611e2657611e25611a40565b5b611e3286828701611c67565b9150509250925092565b600080600060608486031215611e5557611e54611a3b565b5b6000611e6386828701611a8e565b9350506020611e7486828701611a8e565b9250506040611e8586828701611ac4565b9150509250925092565b600060208284031215611ea557611ea4611a3b565b5b6000611eb384828501611a8e565b91505092915050565b611ec581611a65565b82525050565b6000602082019050611ee06000830184611ebc565b92915050565b60008060408385031215611efd57611efc611a3b565b5b6000611f0b85828601611a8e565b9250506020611f1c85828601611a8e565b9150509250929050565b60008060408385031215611f3d57611f3c611a3b565b5b6000611f4b85828601611ac4565b925050602083013567ffffffffffffffff811115611f6c57611f6b611a40565b5b611f7885828601611c67565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611fbc578082015181840152602081019050611fa1565b60008484015250505050565b6000611fd382611f82565b611fdd8185611f8d565b9350611fed818560208601611f9e565b611ff681611b59565b840191505092915050565b60006040820190506120166000830185611da3565b81810360208301526120288184611fc8565b90509392505050565b600082825260208201905092915050565b7f49737375616e636520697320636c6f7365640000000000000000000000000000600082015250565b6000612078601283612031565b915061208382612042565b602082019050919050565b600060208201905081810360008301526120a78161206b565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061210a602683612031565b9150612115826120ae565b604082019050919050565b60006020820190508181036000830152612139816120fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061217a82611aa3565b915061218583611aa3565b925082820190508082111561219d5761219c612140565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006121d9602083612031565b91506121e4826121a3565b602082019050919050565b60006020820190508181036000830152612208816121cc565b9050919050565b600061221a82611aa3565b915061222583611aa3565b925082820390508181111561223d5761223c612140565b5b9291505056fea2646970667358221220ef6e1e090299420083334924f6c1aa0a56c5245f069745b53b07188227bc97f364736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063bb3acde911610071578063bb3acde914610346578063dd62ed3e14610362578063e77c646d14610392578063ee532f31146103ae578063f2fde38b146103ca57610121565b8063715018a6146102a25780638da5cb5b146102ac5780639675193c146102ca578063a457c2d7146102e6578063a9059cbb1461031657610121565b806323b872dd116100f457806323b872dd146101d85780632535f762146102085780632f1cae8514610224578063395093511461024257806370a082311461027257610121565b8063095ea7b314610126578063122eb5751461015657806318160ddd146101885780631badb25c146101a6575b600080fd5b610140600480360381019061013b9190611ad9565b6103e6565b60405161014d9190611b34565b60405180910390f35b610170600480360381019061016b9190611c95565b610510565b60405161017f93929190611d6c565b60405180910390f35b6101906106e2565b60405161019d9190611db2565b60405180910390f35b6101c060048036038101906101bb9190611dcd565b6106ec565b6040516101cf93929190611d6c565b60405180910390f35b6101f260048036038101906101ed9190611e3c565b610820565b6040516101ff9190611b34565b60405180910390f35b610222600480360381019061021d9190611dcd565b610839565b005b61022c610849565b6040516102399190611b34565b60405180910390f35b61025c60048036038101906102579190611ad9565b610860565b6040516102699190611b34565b60405180910390f35b61028c60048036038101906102879190611e8f565b610a94565b6040516102999190611db2565b60405180910390f35b6102aa610adc565b005b6102b4610af0565b6040516102c19190611ecb565b60405180910390f35b6102e460048036038101906102df9190611dcd565b610b1a565b005b61030060048036038101906102fb9190611ad9565b610b90565b60405161030d9190611b34565b60405180910390f35b610330600480360381019061032b9190611ad9565b610dc4565b60405161033d9190611b34565b60405180910390f35b610360600480360381019061035b9190611dcd565b610ddb565b005b61037c60048036038101906103779190611ee6565b610ea8565b6040516103899190611db2565b60405180910390f35b6103ac60048036038101906103a79190611f26565b610f2f565b005b6103c860048036038101906103c39190611c95565b610fa5565b005b6103e460048036038101906103df9190611e8f565b610fb7565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361042057600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104fe9190611db2565b60405180910390a36001905092915050565b6000806000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548511156105b257600060536000801b8160f81b91509250925092506106d8565b846000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561061157600060526000801b8160f81b91509250925092506106d8565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff160361065e57600060576000801b8160f81b91509250925092506106d8565b6106a66000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548661103a565b6106c357600060506000801b8160f81b91509250925092506106d8565b600160516000801b8160f81b91509250925092505b9450945094915050565b6000600254905090565b6000806000846000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561075057600060526000801b8160f81b9150925092509250610817565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff160361079d57600060576000801b8160f81b9150925092509250610817565b6107e56000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548661103a565b61080257600060506000801b8160f81b9150925092509250610817565b600160516000801b8160f81b91509250925092505b93509350939050565b600061082e33858585611069565b600190509392505050565b610844338484611212565b505050565b6000600360149054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361089a57600080fd5b61092982600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142690919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610a829190611db2565b60405180910390a36001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610ae461143c565b610aee60006114ba565b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b248383611580565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fb7d0d6b60740753e9f16692a2f479472a1385aec2420fa43225b02f2ffa1afe78484604051610b83929190612001565b60405180910390a3505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bca57600080fd5b610c5982600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172690919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610db29190611db2565b60405180910390a36001905092915050565b6000610dd1338484611212565b6001905092915050565b610de361143c565b600360149054906101000a900460ff16610e32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e299061208e565b60405180910390fd5b610e3c838361173c565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0e9905d62635f049c2f4e11678ebf9dc3d1f8c4a653e290759b772e47ba00d008484604051610e9b929190612001565b60405180910390a3505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610f39338361188d565b3373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fb7d0d6b60740753e9f16692a2f479472a1385aec2420fa43225b02f2ffa1afe78484604051610f99929190612001565b60405180910390a35050565b610fb133858585611069565b50505050565b610fbf61143c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361102e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102590612120565b60405180910390fd5b611037816114ba565b50565b6000808284611049919061216f565b90508381101561105d576000915050611063565b60019150505b92915050565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156110f257600080fd5b61118181600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172690919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061120c838383611212565b50505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111561125d57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361129657600080fd5b6112e7816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172690919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061137a816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142690919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114199190611db2565b60405180910390a3505050565b60008183611434919061216f565b905092915050565b611444611a29565b73ffffffffffffffffffffffffffffffffffffffff16611462610af0565b73ffffffffffffffffffffffffffffffffffffffff16146114b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114af906121ef565b60405180910390fd5b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111561160957600080fd5b61169881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172690919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611722828261188d565b5050565b60008183611734919061220f565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361177557600080fd5b61178a8160025461142690919063ffffffff16565b6002819055506117e1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142690919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118819190611db2565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118c657600080fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111561191157600080fd5b6119268160025461172690919063ffffffff16565b60028190555061197d816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172690919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611a1d9190611db2565b60405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a7082611a45565b9050919050565b611a8081611a65565b8114611a8b57600080fd5b50565b600081359050611a9d81611a77565b92915050565b6000819050919050565b611ab681611aa3565b8114611ac157600080fd5b50565b600081359050611ad381611aad565b92915050565b60008060408385031215611af057611aef611a3b565b5b6000611afe85828601611a8e565b9250506020611b0f85828601611ac4565b9150509250929050565b60008115159050919050565b611b2e81611b19565b82525050565b6000602082019050611b496000830184611b25565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611ba282611b59565b810181811067ffffffffffffffff82111715611bc157611bc0611b6a565b5b80604052505050565b6000611bd4611a31565b9050611be08282611b99565b919050565b600067ffffffffffffffff821115611c0057611bff611b6a565b5b611c0982611b59565b9050602081019050919050565b82818337600083830152505050565b6000611c38611c3384611be5565b611bca565b905082815260208101848484011115611c5457611c53611b54565b5b611c5f848285611c16565b509392505050565b600082601f830112611c7c57611c7b611b4f565b5b8135611c8c848260208601611c25565b91505092915050565b60008060008060808587031215611caf57611cae611a3b565b5b6000611cbd87828801611a8e565b9450506020611cce87828801611a8e565b9350506040611cdf87828801611ac4565b925050606085013567ffffffffffffffff811115611d0057611cff611a40565b5b611d0c87828801611c67565b91505092959194509250565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611d4d81611d18565b82525050565b6000819050919050565b611d6681611d53565b82525050565b6000606082019050611d816000830186611b25565b611d8e6020830185611d44565b611d9b6040830184611d5d565b949350505050565b611dac81611aa3565b82525050565b6000602082019050611dc76000830184611da3565b92915050565b600080600060608486031215611de657611de5611a3b565b5b6000611df486828701611a8e565b9350506020611e0586828701611ac4565b925050604084013567ffffffffffffffff811115611e2657611e25611a40565b5b611e3286828701611c67565b9150509250925092565b600080600060608486031215611e5557611e54611a3b565b5b6000611e6386828701611a8e565b9350506020611e7486828701611a8e565b9250506040611e8586828701611ac4565b9150509250925092565b600060208284031215611ea557611ea4611a3b565b5b6000611eb384828501611a8e565b91505092915050565b611ec581611a65565b82525050565b6000602082019050611ee06000830184611ebc565b92915050565b60008060408385031215611efd57611efc611a3b565b5b6000611f0b85828601611a8e565b9250506020611f1c85828601611a8e565b9150509250929050565b60008060408385031215611f3d57611f3c611a3b565b5b6000611f4b85828601611ac4565b925050602083013567ffffffffffffffff811115611f6c57611f6b611a40565b5b611f7885828601611c67565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611fbc578082015181840152602081019050611fa1565b60008484015250505050565b6000611fd382611f82565b611fdd8185611f8d565b9350611fed818560208601611f9e565b611ff681611b59565b840191505092915050565b60006040820190506120166000830185611da3565b81810360208301526120288184611fc8565b90509392505050565b600082825260208201905092915050565b7f49737375616e636520697320636c6f7365640000000000000000000000000000600082015250565b6000612078601283612031565b915061208382612042565b602082019050919050565b600060208201905081810360008301526120a78161206b565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061210a602683612031565b9150612115826120ae565b604082019050919050565b60006020820190508181036000830152612139816120fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061217a82611aa3565b915061218583611aa3565b925082820190508082111561219d5761219c612140565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006121d9602083612031565b91506121e4826121a3565b602082019050919050565b60006020820190508181036000830152612208816121cc565b9050919050565b600061221a82611aa3565b915061222583611aa3565b925082820390508181111561223d5761223c612140565b5b9291505056fea2646970667358221220ef6e1e090299420083334924f6c1aa0a56c5245f069745b53b07188227bc97f364736f6c63430008100033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14859:30",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:30",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:30"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:30",
                "type": ""
              }
            ],
            "src": "7:75:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:30",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:30"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:30",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:30"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:30",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:30"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:30"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:30",
                "type": ""
              }
            ],
            "src": "334:126:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:30"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:30"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:30",
                "type": ""
              }
            ],
            "src": "466:96:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:30"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:30"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:30"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:30"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:30"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:30",
                "type": ""
              }
            ],
            "src": "568:122:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:30"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:30"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:30",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:30",
                "type": ""
              }
            ],
            "src": "696:139:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:32:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "896:16:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "907:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "896:7:30"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "868:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "878:7:30",
                "type": ""
              }
            ],
            "src": "841:77:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "967:79:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1024:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1036:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1026:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1026:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1026:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "990:5:30"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1015:5:30"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "997:17:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "997:24:30"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "987:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:35:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "980:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:43:30"
                  },
                  "nodeType": "YulIf",
                  "src": "977:63:30"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "960:5:30",
                "type": ""
              }
            ],
            "src": "924:122:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1104:87:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1114:29:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1136:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1123:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:20:30"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1114:5:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1179:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1152:26:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:33:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1152:33:30"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1082:6:30",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1090:3:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1098:5:30",
                "type": ""
              }
            ],
            "src": "1052:139:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1280:391:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1326:83:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1328:77:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1328:79:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1328:79:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1301:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1310:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1297:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1297:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1322:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1293:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1293:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "1290:119:30"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1419:117:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1434:15:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1448:1:30",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1438:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1463:63:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1498:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1509:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1494:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1494:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1518:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1473:20:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1473:53:30"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1463:6:30"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1546:118:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1561:16:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1575:2:30",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1565:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1591:63:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1626:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1637:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1622:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1622:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1646:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1601:20:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1601:53:30"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1591:6:30"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1242:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1253:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1265:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1273:6:30",
                "type": ""
              }
            ],
            "src": "1197:474:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1719:48:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1729:32:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1754:5:30"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1747:6:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1747:13:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1740:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1740:21:30"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1729:7:30"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1701:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1711:7:30",
                "type": ""
              }
            ],
            "src": "1677:90:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1832:50:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1849:3:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1869:5:30"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1854:14:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1854:21:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1842:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1842:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1842:34:30"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1820:5:30",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1827:3:30",
                "type": ""
              }
            ],
            "src": "1773:109:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1980:118:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1990:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2002:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2013:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1998:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1998:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1990:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2064:6:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2077:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2088:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2073:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2073:17:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2026:37:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2026:65:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2026:65:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1952:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1964:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1975:4:30",
                "type": ""
              }
            ],
            "src": "1888:210:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2193:28:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2210:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2213:1:30",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2203:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2203:12:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2203:12:30"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "2104:117:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2316:28:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2333:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2336:1:30",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2326:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2326:12:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2326:12:30"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "2227:117:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2398:54:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2408:38:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2426:5:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2433:2:30",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2422:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2422:14:30"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2442:2:30",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2438:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2438:7:30"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2418:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2418:28:30"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "2408:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2381:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "2391:6:30",
                "type": ""
              }
            ],
            "src": "2350:102:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2486:152:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2503:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2506:77:30",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2496:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2496:88:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2496:88:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2600:1:30",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2603:4:30",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2593:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2593:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2593:15:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2624:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2627:4:30",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2617:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2617:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2617:15:30"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2458:180:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2687:238:30",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2697:58:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2719:6:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "2749:4:30"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2727:21:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2727:27:30"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2715:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2715:40:30"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2701:10:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2866:22:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2868:16:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2868:18:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2868:18:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2809:10:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2821:18:30",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2806:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2806:34:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2845:10:30"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2857:6:30"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2842:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2842:22:30"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2803:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2803:62:30"
                  },
                  "nodeType": "YulIf",
                  "src": "2800:88:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2904:2:30",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2908:10:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2897:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2897:22:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2897:22:30"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2673:6:30",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "2681:4:30",
                "type": ""
              }
            ],
            "src": "2644:281:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2972:88:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2982:30:30",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "2992:18:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2992:20:30"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "2982:6:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3041:6:30"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "3049:4:30"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "3021:19:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3021:33:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3021:33:30"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "2956:4:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2965:6:30",
                "type": ""
              }
            ],
            "src": "2931:129:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3132:241:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3237:22:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3239:16:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3239:18:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3239:18:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3209:6:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3217:18:30",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3206:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3206:30:30"
                  },
                  "nodeType": "YulIf",
                  "src": "3203:56:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3269:37:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3299:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "3277:21:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3277:29:30"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "3269:4:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3343:23:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "3355:4:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3361:4:30",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3351:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3351:15:30"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "3343:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3116:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "3127:4:30",
                "type": ""
              }
            ],
            "src": "3066:307:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3443:82:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "3466:3:30"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "3471:3:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3476:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3453:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3453:30:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3453:30:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "3503:3:30"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3508:6:30"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3499:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3499:16:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3517:1:30",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3492:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3492:27:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3492:27:30"
                }
              ]
            },
            "name": "copy_calldata_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3425:3:30",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "3430:3:30",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3435:6:30",
                "type": ""
              }
            ],
            "src": "3379:146:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3614:340:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3624:74:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3690:6:30"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_bytes_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3649:40:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3649:48:30"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3633:15:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3633:65:30"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "3624:5:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "3714:5:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3721:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3707:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3707:21:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3707:21:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3737:27:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "3752:5:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3759:4:30",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3748:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3748:16:30"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "3741:3:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3802:83:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "3804:77:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3804:79:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3804:79:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "3783:3:30"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3788:6:30"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3779:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3779:16:30"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3797:3:30"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3776:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3776:25:30"
                  },
                  "nodeType": "YulIf",
                  "src": "3773:112:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "3931:3:30"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "3936:3:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3941:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "3894:36:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3894:54:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3894:54:30"
                }
              ]
            },
            "name": "abi_decode_available_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3587:3:30",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3592:6:30",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3600:3:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "3608:5:30",
                "type": ""
              }
            ],
            "src": "3531:423:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4034:277:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4083:83:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "4085:77:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4085:79:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4085:79:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4062:6:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4070:4:30",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4058:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4058:17:30"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "4077:3:30"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "4054:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4054:27:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4047:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4047:35:30"
                  },
                  "nodeType": "YulIf",
                  "src": "4044:122:30"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4175:34:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4202:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4189:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4189:20:30"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4179:6:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4218:87:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4278:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4286:4:30",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4274:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4274:17:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4293:6:30"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "4301:3:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4227:46:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4227:78:30"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "4218:5:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4012:6:30",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4020:3:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "4028:5:30",
                "type": ""
              }
            ],
            "src": "3973:338:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4443:817:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4490:83:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4492:77:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4492:79:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4492:79:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4464:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4473:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4460:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4460:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4485:3:30",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4456:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4456:33:30"
                  },
                  "nodeType": "YulIf",
                  "src": "4453:120:30"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4583:117:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4598:15:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4612:1:30",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4602:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4627:63:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4662:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4673:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4658:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4658:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4682:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4637:20:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4637:53:30"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4627:6:30"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4710:118:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4725:16:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4739:2:30",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4729:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4755:63:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4790:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4801:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4786:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4786:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4810:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4765:20:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4765:53:30"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4755:6:30"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4838:118:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4853:16:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4867:2:30",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4857:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4883:63:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4918:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4929:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4914:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4914:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4938:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4893:20:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4893:53:30"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4883:6:30"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4966:287:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4981:46:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5012:9:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5023:2:30",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5008:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5008:18:30"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4995:12:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4995:32:30"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4985:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5074:83:30",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "5076:77:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5076:79:30"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5076:79:30"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5046:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5054:18:30",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5043:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5043:30:30"
                      },
                      "nodeType": "YulIf",
                      "src": "5040:117:30"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5171:72:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5215:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5226:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5211:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5211:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5235:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "5181:29:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5181:62:30"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "5171:6:30"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4389:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4400:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4412:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4420:6:30",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4428:6:30",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4436:6:30",
                "type": ""
              }
            ],
            "src": "4317:943:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5310:105:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5320:89:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5335:5:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5342:66:30",
                        "type": "",
                        "value": "0xff00000000000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5331:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5331:78:30"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5320:7:30"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5292:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5302:7:30",
                "type": ""
              }
            ],
            "src": "5266:149:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5484:52:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5501:3:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5523:5:30"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes1",
                          "nodeType": "YulIdentifier",
                          "src": "5506:16:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5506:23:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5494:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5494:36:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5494:36:30"
                }
              ]
            },
            "name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5472:5:30",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5479:3:30",
                "type": ""
              }
            ],
            "src": "5421:115:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5587:32:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5597:16:30",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5608:5:30"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5597:7:30"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5569:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5579:7:30",
                "type": ""
              }
            ],
            "src": "5542:77:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5690:53:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5707:3:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5730:5:30"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "5712:17:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5712:24:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5700:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5700:37:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5700:37:30"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5678:5:30",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5685:3:30",
                "type": ""
              }
            ],
            "src": "5625:118:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5895:280:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5905:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5917:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5928:2:30",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5913:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5913:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5905:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5979:6:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5992:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6003:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5988:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5988:17:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5941:37:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5941:65:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5941:65:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6058:6:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6071:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6082:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6067:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6067:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6016:41:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6016:70:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6016:70:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6140:6:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6153:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6164:2:30",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6149:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6149:18:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6096:43:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6096:72:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6096:72:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_bytes1_t_bytes32__to_t_bool_t_bytes1_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5851:9:30",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5863:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5871:6:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5879:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5890:4:30",
                "type": ""
              }
            ],
            "src": "5749:426:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6246:53:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6263:3:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6286:5:30"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6268:17:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6268:24:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6256:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6256:37:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6256:37:30"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6234:5:30",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6241:3:30",
                "type": ""
              }
            ],
            "src": "6181:118:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6403:124:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6413:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6425:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6436:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6421:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6421:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6413:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6493:6:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6506:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6517:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6502:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6502:17:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6449:43:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6449:71:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6449:71:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6375:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6387:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6398:4:30",
                "type": ""
              }
            ],
            "src": "6305:222:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6642:688:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6688:83:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6690:77:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6690:79:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6690:79:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6663:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6672:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6659:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6659:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6684:2:30",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6655:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6655:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "6652:119:30"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6781:117:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6796:15:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6810:1:30",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6800:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6825:63:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6860:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6871:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6856:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6856:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6880:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6835:20:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6835:53:30"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6825:6:30"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6908:118:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6923:16:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6937:2:30",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6927:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6953:63:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6988:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6999:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6984:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6984:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7008:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6963:20:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6963:53:30"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6953:6:30"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7036:287:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7051:46:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7082:9:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7093:2:30",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7078:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7078:18:30"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7065:12:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7065:32:30"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7055:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7144:83:30",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "7146:77:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7146:79:30"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7146:79:30"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "7116:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7124:18:30",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7113:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7113:30:30"
                      },
                      "nodeType": "YulIf",
                      "src": "7110:117:30"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7241:72:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7285:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7296:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7281:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7281:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7305:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "7251:29:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7251:62:30"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "7241:6:30"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6596:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6607:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6619:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6627:6:30",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6635:6:30",
                "type": ""
              }
            ],
            "src": "6533:797:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7436:519:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7482:83:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7484:77:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7484:79:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7484:79:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7457:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7466:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7453:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7453:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7478:2:30",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7449:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7449:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "7446:119:30"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7575:117:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7590:15:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7604:1:30",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7594:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7619:63:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7654:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7665:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7650:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7650:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7674:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7629:20:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7629:53:30"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7619:6:30"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7702:118:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7717:16:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7731:2:30",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7721:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7747:63:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7782:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7793:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7778:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7778:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7802:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7757:20:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7757:53:30"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7747:6:30"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7830:118:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7845:16:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7859:2:30",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7849:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7875:63:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7910:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7921:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7906:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7906:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7930:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7885:20:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7885:53:30"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "7875:6:30"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7390:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7401:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7413:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7421:6:30",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7429:6:30",
                "type": ""
              }
            ],
            "src": "7336:619:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8027:263:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8073:83:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "8075:77:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8075:79:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8075:79:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8048:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8057:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8044:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8044:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8069:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8040:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8040:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "8037:119:30"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8166:117:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8181:15:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8195:1:30",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8185:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8210:63:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8245:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8256:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8241:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8241:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8265:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "8220:20:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8220:53:30"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8210:6:30"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7997:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8008:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8020:6:30",
                "type": ""
              }
            ],
            "src": "7961:329:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8361:53:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8378:3:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8401:5:30"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "8383:17:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8383:24:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8371:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8371:37:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8371:37:30"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8349:5:30",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8356:3:30",
                "type": ""
              }
            ],
            "src": "8296:118:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8518:124:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8528:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8540:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8551:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8536:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8536:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8528:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8608:6:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8621:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8632:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8617:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8617:17:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8564:43:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8564:71:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8564:71:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8490:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8502:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8513:4:30",
                "type": ""
              }
            ],
            "src": "8420:222:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8731:391:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8777:83:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "8779:77:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8779:79:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8779:79:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8752:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8761:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8748:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8748:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8773:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8744:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8744:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "8741:119:30"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8870:117:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8885:15:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8899:1:30",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8889:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8914:63:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8949:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8960:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8945:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8945:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8969:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "8924:20:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8924:53:30"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8914:6:30"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8997:118:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9012:16:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9026:2:30",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9016:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9042:63:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9077:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9088:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9073:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9073:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9097:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "9052:20:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9052:53:30"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "9042:6:30"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8693:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8704:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8716:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8724:6:30",
                "type": ""
              }
            ],
            "src": "8648:474:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9220:560:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9266:83:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "9268:77:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9268:79:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9268:79:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9241:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9250:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9237:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9237:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9262:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9233:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9233:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "9230:119:30"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9359:117:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9374:15:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9388:1:30",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9378:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9403:63:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9438:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9449:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9434:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9434:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9458:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9413:20:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9413:53:30"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9403:6:30"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9486:287:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9501:46:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9532:9:30"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9543:2:30",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9528:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9528:18:30"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "9515:12:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9515:32:30"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9505:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9594:83:30",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "9596:77:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9596:79:30"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "9596:79:30"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9566:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9574:18:30",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9563:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9563:30:30"
                      },
                      "nodeType": "YulIf",
                      "src": "9560:117:30"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9691:72:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9735:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9746:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9731:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9731:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9755:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "9701:29:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9701:62:30"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "9691:6:30"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9182:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9193:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9205:6:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9213:6:30",
                "type": ""
              }
            ],
            "src": "9128:652:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9844:40:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9855:22:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9871:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9865:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9865:12:30"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "9855:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9827:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9837:6:30",
                "type": ""
              }
            ],
            "src": "9786:98:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9985:73:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10002:3:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10007:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9995:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9995:19:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9995:19:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10023:29:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10042:3:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10047:4:30",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10038:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10038:14:30"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "10023:11:30"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9957:3:30",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9962:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "9973:11:30",
                "type": ""
              }
            ],
            "src": "9890:168:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10126:184:30",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10136:10:30",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10145:1:30",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "10140:1:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10205:63:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10230:3:30"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "10235:1:30"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10226:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10226:11:30"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "10249:3:30"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "10254:1:30"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10245:3:30"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10245:11:30"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "10239:5:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10239:18:30"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10219:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10219:39:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10219:39:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10166:1:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10169:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10163:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10163:13:30"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10177:19:30",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10179:15:30",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "10188:1:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10191:2:30",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10184:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10184:10:30"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "10179:1:30"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10159:3:30",
                    "statements": []
                  },
                  "src": "10155:113:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "10288:3:30"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10293:6:30"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10284:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10284:16:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10302:1:30",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10277:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10277:27:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10277:27:30"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "10108:3:30",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "10113:3:30",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10118:6:30",
                "type": ""
              }
            ],
            "src": "10064:246:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10406:283:30",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10416:52:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10462:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "10430:31:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10430:38:30"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10420:6:30",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10477:77:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10542:3:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10547:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10484:57:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10484:70:30"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10477:3:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10602:5:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10609:4:30",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10598:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10598:16:30"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10616:3:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10621:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "10563:34:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10563:65:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10563:65:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10637:46:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10648:3:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10675:6:30"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "10653:21:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10653:29:30"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10644:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10644:39:30"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10637:3:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10387:5:30",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10394:3:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10402:3:30",
                "type": ""
              }
            ],
            "src": "10316:373:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10839:275:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10849:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10861:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10872:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10857:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10857:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10849:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10929:6:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10942:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10953:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10938:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10938:17:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10885:43:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10885:71:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10885:71:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10977:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10988:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10973:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10973:18:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10997:4:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11003:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10993:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10993:20:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10966:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10966:48:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10966:48:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11023:84:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11093:6:30"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11102:4:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11031:61:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11031:76:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11023:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10803:9:30",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10815:6:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10823:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10834:4:30",
                "type": ""
              }
            ],
            "src": "10695:419:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11216:73:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11233:3:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11238:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11226:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11226:19:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11226:19:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11254:29:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11273:3:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11278:4:30",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11269:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11269:14:30"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "11254:11:30"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11188:3:30",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11193:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "11204:11:30",
                "type": ""
              }
            ],
            "src": "11120:169:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11401:62:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11423:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11431:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11419:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11419:14:30"
                      },
                      {
                        "hexValue": "49737375616e636520697320636c6f736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11435:20:30",
                        "type": "",
                        "value": "Issuance is closed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11412:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11412:44:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11412:44:30"
                }
              ]
            },
            "name": "store_literal_in_memory_8e39bb54d3fb738d89d450dbb748102e9de58384e87cb1a8dc4d1a0d2343e16e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11393:6:30",
                "type": ""
              }
            ],
            "src": "11295:168:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11615:220:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11625:74:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11691:3:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11696:2:30",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11632:58:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11632:67:30"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11625:3:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11797:3:30"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8e39bb54d3fb738d89d450dbb748102e9de58384e87cb1a8dc4d1a0d2343e16e",
                      "nodeType": "YulIdentifier",
                      "src": "11708:88:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11708:93:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11708:93:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11810:19:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11821:3:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11826:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11817:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11817:12:30"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11810:3:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8e39bb54d3fb738d89d450dbb748102e9de58384e87cb1a8dc4d1a0d2343e16e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11603:3:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11611:3:30",
                "type": ""
              }
            ],
            "src": "11469:366:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12012:248:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12022:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12034:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12045:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12030:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12030:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12022:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12069:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12080:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12065:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12065:17:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12088:4:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12094:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12084:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12084:20:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12058:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12058:47:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12058:47:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12114:139:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12248:4:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8e39bb54d3fb738d89d450dbb748102e9de58384e87cb1a8dc4d1a0d2343e16e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12122:124:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12122:131:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12114:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8e39bb54d3fb738d89d450dbb748102e9de58384e87cb1a8dc4d1a0d2343e16e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11992:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12007:4:30",
                "type": ""
              }
            ],
            "src": "11841:419:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12372:119:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12394:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12402:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12390:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12390:14:30"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12406:34:30",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12383:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12383:58:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12383:58:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12462:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12470:2:30",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12458:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12458:15:30"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12475:8:30",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12451:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12451:33:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12451:33:30"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12364:6:30",
                "type": ""
              }
            ],
            "src": "12266:225:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12643:220:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12653:74:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12719:3:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12724:2:30",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12660:58:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12660:67:30"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12653:3:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12825:3:30"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "12736:88:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12736:93:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12736:93:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12838:19:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12849:3:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12854:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12845:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12845:12:30"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12838:3:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12631:3:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12639:3:30",
                "type": ""
              }
            ],
            "src": "12497:366:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13040:248:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13050:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13062:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13073:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13058:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13058:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13050:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13097:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13108:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13093:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13093:17:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13116:4:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13122:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13112:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13112:20:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13086:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13086:47:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13086:47:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13142:139:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13276:4:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13150:124:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13150:131:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13142:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13020:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13035:4:30",
                "type": ""
              }
            ],
            "src": "12869:419:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13322:152:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13339:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13342:77:30",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13332:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13332:88:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13332:88:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13436:1:30",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13439:4:30",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13429:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13429:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13429:15:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13460:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13463:4:30",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13453:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13453:15:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13453:15:30"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "13294:180:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13524:147:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13534:25:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13557:1:30"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13539:17:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13539:20:30"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "13534:1:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13568:25:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13591:1:30"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13573:17:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13573:20:30"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "13568:1:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13602:16:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13613:1:30"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13616:1:30"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13609:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13609:9:30"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "13602:3:30"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13642:22:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13644:16:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13644:18:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13644:18:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13634:1:30"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "13637:3:30"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13631:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13631:10:30"
                  },
                  "nodeType": "YulIf",
                  "src": "13628:36:30"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13511:1:30",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13514:1:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "13520:3:30",
                "type": ""
              }
            ],
            "src": "13480:191:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13783:76:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13805:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13813:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13801:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13801:14:30"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13817:34:30",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13794:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13794:58:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13794:58:30"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13775:6:30",
                "type": ""
              }
            ],
            "src": "13677:182:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14011:220:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14021:74:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14087:3:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14092:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14028:58:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14028:67:30"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14021:3:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14193:3:30"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "14104:88:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14104:93:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14104:93:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14206:19:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14217:3:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14222:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14213:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14213:12:30"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14206:3:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13999:3:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14007:3:30",
                "type": ""
              }
            ],
            "src": "13865:366:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14408:248:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14418:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14430:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14441:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14426:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14426:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14418:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14465:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14476:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14461:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14461:17:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14484:4:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14490:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14480:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14480:20:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14454:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14454:47:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14454:47:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14510:139:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14644:4:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14518:124:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14518:131:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14510:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14388:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14403:4:30",
                "type": ""
              }
            ],
            "src": "14237:419:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14707:149:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14717:25:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14740:1:30"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14722:17:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14722:20:30"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "14717:1:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14751:25:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14774:1:30"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14756:17:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14756:20:30"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "14751:1:30"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14785:17:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14797:1:30"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14800:1:30"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14793:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14793:9:30"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "14785:4:30"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14827:22:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14829:16:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14829:18:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14829:18:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "14818:4:30"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14824:1:30"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14815:2:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14815:11:30"
                  },
                  "nodeType": "YulIf",
                  "src": "14812:37:30"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14693:1:30",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14696:1:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "14702:4:30",
                "type": ""
              }
            ],
            "src": "14662:194:30"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes1_t_bytes32__to_t_bool_t_bytes1_t_bytes32__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8e39bb54d3fb738d89d450dbb748102e9de58384e87cb1a8dc4d1a0d2343e16e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Issuance is closed\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e39bb54d3fb738d89d450dbb748102e9de58384e87cb1a8dc4d1a0d2343e16e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_8e39bb54d3fb738d89d450dbb748102e9de58384e87cb1a8dc4d1a0d2343e16e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e39bb54d3fb738d89d450dbb748102e9de58384e87cb1a8dc4d1a0d2343e16e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e39bb54d3fb738d89d450dbb748102e9de58384e87cb1a8dc4d1a0d2343e16e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
      "id": 30,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "326:8962:22:-:0;;;792:4;767:29;;;;;;;;;;;;;;;;;;;;823:16;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;326:8962:22;;640:96:9;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;326:8962:22:-;;;;;;;",
  "deployedSourceMap": "326:8962:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1992:238:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8654:632:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;468:89:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7272:509:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2821:195:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1740:225:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3803:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3786:363:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;770:104;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6185:289:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4625:373:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2398:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4566:337:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1205:151:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5376:225:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3059:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1992:238:24;2057:4;2100:1;2081:21;;:7;:21;;;2073:30;;;;;;2146:5;2114:8;:20;2123:10;2114:20;;;;;;;;;;;;;;;:29;2135:7;2114:29;;;;;;;;;;;;;;;:37;;;;2187:7;2166:36;;2175:10;2166:36;;;2196:5;2166:36;;;;;;:::i;:::-;;;;;;;;2219:4;2212:11;;1992:238;;;;:::o;8654:632:22:-;8804:4;8810:6;8818:7;8910:8;:15;8919:5;8910:15;;;;;;;;;;;;;;;:27;8926:10;8910:27;;;;;;;;;;;;;;;;8901:6;:36;8897:341;;;8959:5;8966:4;8980:1;8972:10;;8951:32;;;;;;;;;;;;;8897:341;9021:6;9002:9;:16;9012:5;9002:16;;;;;;;;;;;;;;;;:25;8998:240;;;9037:5;9044:4;9058:1;9050:10;;9029:32;;;;;;;;;;;;;8998:240;9095:1;9080:17;;:3;:17;;;9076:162;;9107:5;9114:4;9128:1;9120:10;;9099:32;;;;;;;;;;;;;9076:162;9151:41;9169:9;:14;9179:3;9169:14;;;;;;;;;;;;;;;;9185:6;9151:17;:41::i;:::-;9146:92;;9214:5;9221:4;9235:1;9227:10;;9206:32;;;;;;;;;;;;;9146:92;9256:4;9262;9276:1;9268:10;;9248:31;;;;;;;;;;;8654:632;;;;;;;;;:::o;468:89:24:-;512:7;538:12;;531:19;;468:89;:::o;7272:509:22:-;7395:4;7401:6;7409:7;7516:6;7492:9;:21;7502:10;7492:21;;;;;;;;;;;;;;;;:30;7488:245;;;7532:5;7539:4;7553:1;7545:10;;7524:32;;;;;;;;;;;;;7488:245;7590:1;7575:17;;:3;:17;;;7571:162;;7602:5;7609:4;7623:1;7615:10;;7594:32;;;;;;;;;;;;;7571:162;7646:41;7664:9;:14;7674:3;7664:14;;;;;;;;;;;;;;;;7680:6;7646:17;:41::i;:::-;7641:92;;7709:5;7716:4;7730:1;7722:10;;7701:32;;;;;;;;;;;;;7641:92;7751:4;7757;7771:1;7763:10;;7743:31;;;;;;;;;;;7272:509;;;;;;;;:::o;2821:195:24:-;2930:4;2946:42;2960:10;2972:4;2978:2;2982:5;2946:13;:42::i;:::-;3005:4;2998:11;;2821:195;;;;;:::o;1740:225:22:-;1924:34;1934:10;1946:3;1951:6;1924:9;:34::i;:::-;1740:225;;;:::o;3803:83::-;3848:4;3871:8;;;;;;;;;;;3864:15;;3803:83;:::o;3786:363:24:-;3888:4;3931:1;3912:21;;:7;:21;;;3904:30;;;;;;3991:45;4025:10;3991:8;:20;4000:10;3991:20;;;;;;;;;;;;;;;:29;4012:7;3991:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;3945:8;:20;3954:10;3945:20;;;;;;;;;;;;;;;:29;3966:7;3945:29;;;;;;;;;;;;;;;:101;;;;4082:7;4061:60;;4070:10;4061:60;;;4091:8;:20;4100:10;4091:20;;;;;;;;;;;;;;;:29;4112:7;4091:29;;;;;;;;;;;;;;;;4061:60;;;;;;:::i;:::-;;;;;;;;4138:4;4131:11;;3786:363;;;;:::o;770:104::-;825:7;851:9;:16;861:5;851:16;;;;;;;;;;;;;;;;844:23;;770:104;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;6185:289:22:-;6372:31;6382:12;6396:6;6372:9;:31::i;:::-;6439:12;6418:49;;6427:10;6418:49;;;6453:6;6461:5;6418:49;;;;;;;:::i;:::-;;;;;;;;6185:289;;;:::o;4625:373:24:-;4732:4;4775:1;4756:21;;:7;:21;;;4748:30;;;;;;4835:50;4869:15;4835:8;:20;4844:10;4835:20;;;;;;;;;;;;;;;:29;4856:7;4835:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;4789:8;:20;4798:10;4789:20;;;;;;;;;;;;;;;:29;4810:7;4789:29;;;;;;;;;;;;;;;:106;;;;4931:7;4910:60;;4919:10;4910:60;;;4940:8;:20;4949:10;4940:20;;;;;;;;;;;;;;;:29;4961:7;4940:29;;;;;;;;;;;;;;;;4910:60;;;;;;:::i;:::-;;;;;;;;4987:4;4980:11;;4625:373;;;;:::o;2398:137::-;2459:4;2475:32;2485:10;2497:2;2501:5;2475:9;:32::i;:::-;2524:4;2517:11;;2398:137;;;;:::o;4566:337:22:-;1094:13:0;:11;:13::i;:::-;4766:8:22::1;;;;;;;;;;;4758:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;4807:27;4813:12;4827:6;4807:5;:27::i;:::-;4868:12;4849:47;;4856:10;4849:47;;;4882:6;4890:5;4849:47;;;;;;;:::i;:::-;;;;;;;;4566:337:::0;;;:::o;1205:151:24:-;1299:7;1325:8;:15;1334:5;1325:15;;;;;;;;;;;;;;;:24;1341:7;1325:24;;;;;;;;;;;;;;;;1318:31;;1205:151;;;;:::o;5376:225:22:-;5507:25;5513:10;5525:6;5507:5;:25::i;:::-;5568:10;5547:47;;5564:1;5547:47;;;5580:6;5588:5;5547:47;;;;;;;:::i;:::-;;;;;;;;5376:225;;:::o;3059:263::-;3270:45;3284:10;3296:5;3303:3;3308:6;3270:13;:45::i;:::-;3059:263;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1145:162:19:-;1208:4;1224:9;1240:1;1236;:5;;;;:::i;:::-;1224:17;;1259:1;1255;:5;1251:49;;;1269:5;1262:12;;;;;1251:49;1296:4;1289:11;;;1145:162;;;;;:::o;3022:293:24:-;3177:8;:14;3186:4;3177:14;;;;;;;;;;;;;;;:23;3192:7;3177:23;;;;;;;;;;;;;;;;3168:5;:32;;3160:41;;;;;;3238:34;3266:5;3238:8;:14;3247:4;3238:14;;;;;;;;;;;;;;;:23;3253:7;3238:23;;;;;;;;;;;;;;;;:27;;:34;;;;:::i;:::-;3212:8;:14;3221:4;3212:14;;;;;;;;;;;;;;;:23;3227:7;3212:23;;;;;;;;;;;;;;;:60;;;;3282:26;3292:4;3298:2;3302:5;3282:9;:26::i;:::-;3022:293;;;;:::o;5217:298::-;5313:9;:15;5323:4;5313:15;;;;;;;;;;;;;;;;5304:5;:24;;5296:33;;;;;;5361:1;5347:16;;:2;:16;;;5339:25;;;;;;5392:26;5412:5;5392:9;:15;5402:4;5392:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5374:9;:15;5384:4;5374:15;;;;;;;;;;;;;;;:44;;;;5444:24;5462:5;5444:9;:13;5454:2;5444:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5428:9;:13;5438:2;5428:13;;;;;;;;;;;;;;;:40;;;;5498:2;5483:25;;5492:4;5483:25;;;5502:5;5483:25;;;;;;:::i;:::-;;;;;;;;5217:298;;;:::o;2755:96:16:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;6977:427:24:-;7064:8;:17;7073:7;7064:17;;;;;;;;;;;;;;;:29;7082:10;7064:29;;;;;;;;;;;;;;;;7055:5;:38;;7047:47;;;;;;7304:62;7351:5;7304:8;:17;7313:7;7304:17;;;;;;;;;;;;;;;:29;7322:10;7304:29;;;;;;;;;;;;;;;;:33;;:62;;;;:::i;:::-;7272:8;:17;7281:7;7272:17;;;;;;;;;;;;;;;:29;7290:10;7272:29;;;;;;;;;;;;;;;:94;;;;7376:21;7382:7;7391:5;7376;:21::i;:::-;6977:427;;:::o;3122:96:16:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;5858:262:24:-;5951:1;5932:21;;:7;:21;;;5924:30;;;;;;5979:23;5996:5;5979:12;;:16;;:23;;;;:::i;:::-;5964:12;:38;;;;6033:29;6056:5;6033:9;:18;6043:7;6033:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6012:9;:18;6022:7;6012:18;;;;;;;;;;;;;;;:50;;;;6098:7;6077:36;;6094:1;6077:36;;;6107:5;6077:36;;;;;;:::i;:::-;;;;;;;;5858:262;;:::o;6346:309::-;6439:1;6420:21;;:7;:21;;;6412:30;;;;;;6469:9;:18;6479:7;6469:18;;;;;;;;;;;;;;;;6460:5;:27;;6452:36;;;;;;6514:23;6531:5;6514:12;;:16;;:23;;;;:::i;:::-;6499:12;:38;;;;6568:29;6591:5;6568:9;:18;6578:7;6568:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6547:9;:18;6557:7;6547:18;;;;;;;;;;;;;;;:50;;;;6638:1;6612:36;;6621:7;6612:36;;;6642:5;6612:36;;;;;;:::i;:::-;;;;;;;;6346:309;;:::o;640:96:9:-;693:7;719:10;712:17;;640:96;:::o;7:75:30:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:117::-;2213:1;2210;2203:12;2227:117;2336:1;2333;2326:12;2350:102;2391:6;2442:2;2438:7;2433:2;2426:5;2422:14;2418:28;2408:38;;2350:102;;;:::o;2458:180::-;2506:77;2503:1;2496:88;2603:4;2600:1;2593:15;2627:4;2624:1;2617:15;2644:281;2727:27;2749:4;2727:27;:::i;:::-;2719:6;2715:40;2857:6;2845:10;2842:22;2821:18;2809:10;2806:34;2803:62;2800:88;;;2868:18;;:::i;:::-;2800:88;2908:10;2904:2;2897:22;2687:238;2644:281;;:::o;2931:129::-;2965:6;2992:20;;:::i;:::-;2982:30;;3021:33;3049:4;3041:6;3021:33;:::i;:::-;2931:129;;;:::o;3066:307::-;3127:4;3217:18;3209:6;3206:30;3203:56;;;3239:18;;:::i;:::-;3203:56;3277:29;3299:6;3277:29;:::i;:::-;3269:37;;3361:4;3355;3351:15;3343:23;;3066:307;;;:::o;3379:146::-;3476:6;3471:3;3466;3453:30;3517:1;3508:6;3503:3;3499:16;3492:27;3379:146;;;:::o;3531:423::-;3608:5;3633:65;3649:48;3690:6;3649:48;:::i;:::-;3633:65;:::i;:::-;3624:74;;3721:6;3714:5;3707:21;3759:4;3752:5;3748:16;3797:3;3788:6;3783:3;3779:16;3776:25;3773:112;;;3804:79;;:::i;:::-;3773:112;3894:54;3941:6;3936:3;3931;3894:54;:::i;:::-;3614:340;3531:423;;;;;:::o;3973:338::-;4028:5;4077:3;4070:4;4062:6;4058:17;4054:27;4044:122;;4085:79;;:::i;:::-;4044:122;4202:6;4189:20;4227:78;4301:3;4293:6;4286:4;4278:6;4274:17;4227:78;:::i;:::-;4218:87;;4034:277;3973:338;;;;:::o;4317:943::-;4412:6;4420;4428;4436;4485:3;4473:9;4464:7;4460:23;4456:33;4453:120;;;4492:79;;:::i;:::-;4453:120;4612:1;4637:53;4682:7;4673:6;4662:9;4658:22;4637:53;:::i;:::-;4627:63;;4583:117;4739:2;4765:53;4810:7;4801:6;4790:9;4786:22;4765:53;:::i;:::-;4755:63;;4710:118;4867:2;4893:53;4938:7;4929:6;4918:9;4914:22;4893:53;:::i;:::-;4883:63;;4838:118;5023:2;5012:9;5008:18;4995:32;5054:18;5046:6;5043:30;5040:117;;;5076:79;;:::i;:::-;5040:117;5181:62;5235:7;5226:6;5215:9;5211:22;5181:62;:::i;:::-;5171:72;;4966:287;4317:943;;;;;;;:::o;5266:149::-;5302:7;5342:66;5335:5;5331:78;5320:89;;5266:149;;;:::o;5421:115::-;5506:23;5523:5;5506:23;:::i;:::-;5501:3;5494:36;5421:115;;:::o;5542:77::-;5579:7;5608:5;5597:16;;5542:77;;;:::o;5625:118::-;5712:24;5730:5;5712:24;:::i;:::-;5707:3;5700:37;5625:118;;:::o;5749:426::-;5890:4;5928:2;5917:9;5913:18;5905:26;;5941:65;6003:1;5992:9;5988:17;5979:6;5941:65;:::i;:::-;6016:70;6082:2;6071:9;6067:18;6058:6;6016:70;:::i;:::-;6096:72;6164:2;6153:9;6149:18;6140:6;6096:72;:::i;:::-;5749:426;;;;;;:::o;6181:118::-;6268:24;6286:5;6268:24;:::i;:::-;6263:3;6256:37;6181:118;;:::o;6305:222::-;6398:4;6436:2;6425:9;6421:18;6413:26;;6449:71;6517:1;6506:9;6502:17;6493:6;6449:71;:::i;:::-;6305:222;;;;:::o;6533:797::-;6619:6;6627;6635;6684:2;6672:9;6663:7;6659:23;6655:32;6652:119;;;6690:79;;:::i;:::-;6652:119;6810:1;6835:53;6880:7;6871:6;6860:9;6856:22;6835:53;:::i;:::-;6825:63;;6781:117;6937:2;6963:53;7008:7;6999:6;6988:9;6984:22;6963:53;:::i;:::-;6953:63;;6908:118;7093:2;7082:9;7078:18;7065:32;7124:18;7116:6;7113:30;7110:117;;;7146:79;;:::i;:::-;7110:117;7251:62;7305:7;7296:6;7285:9;7281:22;7251:62;:::i;:::-;7241:72;;7036:287;6533:797;;;;;:::o;7336:619::-;7413:6;7421;7429;7478:2;7466:9;7457:7;7453:23;7449:32;7446:119;;;7484:79;;:::i;:::-;7446:119;7604:1;7629:53;7674:7;7665:6;7654:9;7650:22;7629:53;:::i;:::-;7619:63;;7575:117;7731:2;7757:53;7802:7;7793:6;7782:9;7778:22;7757:53;:::i;:::-;7747:63;;7702:118;7859:2;7885:53;7930:7;7921:6;7910:9;7906:22;7885:53;:::i;:::-;7875:63;;7830:118;7336:619;;;;;:::o;7961:329::-;8020:6;8069:2;8057:9;8048:7;8044:23;8040:32;8037:119;;;8075:79;;:::i;:::-;8037:119;8195:1;8220:53;8265:7;8256:6;8245:9;8241:22;8220:53;:::i;:::-;8210:63;;8166:117;7961:329;;;;:::o;8296:118::-;8383:24;8401:5;8383:24;:::i;:::-;8378:3;8371:37;8296:118;;:::o;8420:222::-;8513:4;8551:2;8540:9;8536:18;8528:26;;8564:71;8632:1;8621:9;8617:17;8608:6;8564:71;:::i;:::-;8420:222;;;;:::o;8648:474::-;8716:6;8724;8773:2;8761:9;8752:7;8748:23;8744:32;8741:119;;;8779:79;;:::i;:::-;8741:119;8899:1;8924:53;8969:7;8960:6;8949:9;8945:22;8924:53;:::i;:::-;8914:63;;8870:117;9026:2;9052:53;9097:7;9088:6;9077:9;9073:22;9052:53;:::i;:::-;9042:63;;8997:118;8648:474;;;;;:::o;9128:652::-;9205:6;9213;9262:2;9250:9;9241:7;9237:23;9233:32;9230:119;;;9268:79;;:::i;:::-;9230:119;9388:1;9413:53;9458:7;9449:6;9438:9;9434:22;9413:53;:::i;:::-;9403:63;;9359:117;9543:2;9532:9;9528:18;9515:32;9574:18;9566:6;9563:30;9560:117;;;9596:79;;:::i;:::-;9560:117;9701:62;9755:7;9746:6;9735:9;9731:22;9701:62;:::i;:::-;9691:72;;9486:287;9128:652;;;;;:::o;9786:98::-;9837:6;9871:5;9865:12;9855:22;;9786:98;;;:::o;9890:168::-;9973:11;10007:6;10002:3;9995:19;10047:4;10042:3;10038:14;10023:29;;9890:168;;;;:::o;10064:246::-;10145:1;10155:113;10169:6;10166:1;10163:13;10155:113;;;10254:1;10249:3;10245:11;10239:18;10235:1;10230:3;10226:11;10219:39;10191:2;10188:1;10184:10;10179:15;;10155:113;;;10302:1;10293:6;10288:3;10284:16;10277:27;10126:184;10064:246;;;:::o;10316:373::-;10402:3;10430:38;10462:5;10430:38;:::i;:::-;10484:70;10547:6;10542:3;10484:70;:::i;:::-;10477:77;;10563:65;10621:6;10616:3;10609:4;10602:5;10598:16;10563:65;:::i;:::-;10653:29;10675:6;10653:29;:::i;:::-;10648:3;10644:39;10637:46;;10406:283;10316:373;;;;:::o;10695:419::-;10834:4;10872:2;10861:9;10857:18;10849:26;;10885:71;10953:1;10942:9;10938:17;10929:6;10885:71;:::i;:::-;11003:9;10997:4;10993:20;10988:2;10977:9;10973:18;10966:48;11031:76;11102:4;11093:6;11031:76;:::i;:::-;11023:84;;10695:419;;;;;:::o;11120:169::-;11204:11;11238:6;11233:3;11226:19;11278:4;11273:3;11269:14;11254:29;;11120:169;;;;:::o;11295:168::-;11435:20;11431:1;11423:6;11419:14;11412:44;11295:168;:::o;11469:366::-;11611:3;11632:67;11696:2;11691:3;11632:67;:::i;:::-;11625:74;;11708:93;11797:3;11708:93;:::i;:::-;11826:2;11821:3;11817:12;11810:19;;11469:366;;;:::o;11841:419::-;12007:4;12045:2;12034:9;12030:18;12022:26;;12094:9;12088:4;12084:20;12080:1;12069:9;12065:17;12058:47;12122:131;12248:4;12122:131;:::i;:::-;12114:139;;11841:419;;;:::o;12266:225::-;12406:34;12402:1;12394:6;12390:14;12383:58;12475:8;12470:2;12462:6;12458:15;12451:33;12266:225;:::o;12497:366::-;12639:3;12660:67;12724:2;12719:3;12660:67;:::i;:::-;12653:74;;12736:93;12825:3;12736:93;:::i;:::-;12854:2;12849:3;12845:12;12838:19;;12497:366;;;:::o;12869:419::-;13035:4;13073:2;13062:9;13058:18;13050:26;;13122:9;13116:4;13112:20;13108:1;13097:9;13093:17;13086:47;13150:131;13276:4;13150:131;:::i;:::-;13142:139;;12869:419;;;:::o;13294:180::-;13342:77;13339:1;13332:88;13439:4;13436:1;13429:15;13463:4;13460:1;13453:15;13480:191;13520:3;13539:20;13557:1;13539:20;:::i;:::-;13534:25;;13573:20;13591:1;13573:20;:::i;:::-;13568:25;;13616:1;13613;13609:9;13602:16;;13637:3;13634:1;13631:10;13628:36;;;13644:18;;:::i;:::-;13628:36;13480:191;;;;:::o;13677:182::-;13817:34;13813:1;13805:6;13801:14;13794:58;13677:182;:::o;13865:366::-;14007:3;14028:67;14092:2;14087:3;14028:67;:::i;:::-;14021:74;;14104:93;14193:3;14104:93;:::i;:::-;14222:2;14217:3;14213:12;14206:19;;13865:366;;;:::o;14237:419::-;14403:4;14441:2;14430:9;14426:18;14418:26;;14490:9;14484:4;14480:20;14476:1;14465:9;14461:17;14454:47;14518:131;14644:4;14518:131;:::i;:::-;14510:139;;14237:419;;;:::o;14662:194::-;14702:4;14722:20;14740:1;14722:20;:::i;:::-;14717:25;;14756:20;14774:1;14756:20;:::i;:::-;14751:25;;14800:1;14797;14793:9;14785:17;;14824:1;14818:4;14815:11;14812:37;;;14829:18;;:::i;:::-;14812:37;14662:194;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.16;\n\nimport \"../interfaces/IERC1594.sol\";\nimport \"./ERC20Token.sol\";\n\nimport \"../math/KindMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title Standard implementation of ERC1594 (Subset of ERC1400 https://github.com/ethereum/EIPs/issues/1411)\n */\ncontract ERC1594 is IERC1594, ERC20Token, Ownable {\n    // Variable which tells whether issuance is ON or OFF forever\n    // Implementers need to implement one more function to reset the value of `issuance` variable\n    // to false. That function is not a part of the standard (EIP-1594) as it is depend on the various factors\n    // issuer, followed compliance rules etc. So issuers have the choice how they want to close the issuance.\n    bool internal issuance = true;\n\n    /// Constructor\n    constructor() {}\n\n    /**\n     * @notice Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\n     * However for many types of approved transfers, maintaining an on-chain list of approved transfers can be\n     * cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\n     * approving a token transfer, and authorised entity provides signed data which further validates the transfer.\n     * @param _to address The address which you want to transfer to\n     * @param _value uint256 the amount of tokens to be transferred\n     * @param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\n     * for the token contract to interpret or record. This could be signed data authorising the transfer\n     * (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\n     */\n    function transferWithData(\n        address _to,\n        uint256 _value,\n        bytes memory _data\n    ) external {\n        // Add a function to validate the `_data` parameter\n        _transfer(msg.sender, _to, _value);\n    }\n\n    /**\n     * @notice Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\n     * However for many types of approved transfers, maintaining an on-chain list of approved transfers can be\n     * cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\n     * approving a token transfer, and authorised entity provides signed data which further validates the transfer.\n     * @dev `msg.sender` MUST have a sufficient `allowance` set and this `allowance` must be debited by the `_value`.\n     * @param _from address The address which you want to send tokens from\n     * @param _to address The address which you want to transfer to\n     * @param _value uint256 the amount of tokens to be transferred\n     * @param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\n     * for the token contract to interpret or record. This could be signed data authorising the transfer\n     * (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\n     */\n    function transferFromWithData(\n        address _from,\n        address _to,\n        uint256 _value,\n        bytes memory _data\n    ) external {\n        // Add a function to validate the `_data` parameter\n        _transferFrom(msg.sender, _from, _to, _value);\n    }\n\n    /**\n     * @notice A security token issuer can specify that issuance has finished for the token\n     * (i.e. no new tokens can be minted or issued).\n     * @dev If a token returns FALSE for `isIssuable()` then it MUST always return FALSE in the future.\n     * If a token returns FALSE for `isIssuable()` then it MUST never allow additional tokens to be issued.\n     * @return bool `true` signifies the minting is allowed. While `false` denotes the end of minting\n     */\n    function isIssuable() external view returns (bool) {\n        return issuance;\n    }\n\n    /**\n     * @notice This function must be called to increase the total supply (Corresponds to mint function of ERC20).\n     * @dev It only be called by the token issuer or the operator defined by the issuer. ERC1594 doesn't have\n     * have the any logic related to operator but its superset ERC1400 have the operator logic and this function\n     * is allowed to call by the operator.\n     * @param _tokenHolder The account that will receive the created tokens (account should be whitelisted or KYCed).\n     * @param _value The amount of tokens need to be issued\n     * @param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\n     */\n    function issue(\n        address _tokenHolder,\n        uint256 _value,\n        bytes memory _data\n    ) external onlyOwner {\n        // Add a function to validate the `_data` parameter\n        require(issuance, \"Issuance is closed\");\n        _mint(_tokenHolder, _value);\n        emit Issued(msg.sender, _tokenHolder, _value, _data);\n    }\n\n    /**\n     * @notice This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\n     * using different ways that could be implemented with in the `redeem` function definition. But those implementations\n     * are out of the scope of the ERC1594.\n     * @param _value The amount of tokens need to be redeemed\n     * @param _data The `bytes _data` it can be used in the token contract to authenticate the redemption.\n     */\n    function redeem(uint256 _value, bytes memory _data) external {\n        // Add a function to validate the `_data` parameter\n        _burn(msg.sender, _value);\n        emit Redeemed(address(0), msg.sender, _value, _data);\n    }\n\n    /**\n     * @notice This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\n     * using different ways that could be implemented with in the `redeem` function definition. But those implementations\n     * are out of the scope of the ERC1594.\n     * @dev It is analogy to `transferFrom`\n     * @param _tokenHolder The account whose tokens gets redeemed.\n     * @param _value The amount of tokens need to be redeemed\n     * @param _data The `bytes _data` it can be used in the token contract to authenticate the redemption.\n     */\n    function redeemFrom(\n        address _tokenHolder,\n        uint256 _value,\n        bytes memory _data\n    ) external {\n        // Add a function to validate the `_data` parameter\n        _burnFrom(_tokenHolder, _value);\n        emit Redeemed(msg.sender, _tokenHolder, _value, _data);\n    }\n\n    /**\n     * @notice Transfers of securities may fail for a number of reasons. So this function will used to understand the\n     * cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped\n     * with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\n     * @param _to address The address which you want to transfer to\n     * @param _value uint256 the amount of tokens to be transferred\n     * @param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\n     * @return bool It signifies whether the transaction will be executed or not.\n     * @return byte Ethereum status code (ESC)\n     * @return bytes32 Application specific reason code\n     */\n    function canTransfer(\n        address _to,\n        uint256 _value,\n        bytes memory _data\n    ) external view returns (bool, bytes1, bytes32) {\n        // Add a function to validate the `_data` parameter\n        if (_balances[msg.sender] < _value) return (false, 0x52, bytes32(0));\n        else if (_to == address(0)) return (false, 0x57, bytes32(0));\n        else if (!KindMath.checkAdd(_balances[_to], _value))\n            return (false, 0x50, bytes32(0));\n        return (true, 0x51, bytes32(0));\n    }\n\n    /**\n     * @notice Transfers of securities may fail for a number of reasons. So this function will used to understand the\n     * cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped\n     * with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\n     * @param _from address The address which you want to send tokens from\n     * @param _to address The address which you want to transfer to\n     * @param _value uint256 the amount of tokens to be transferred\n     * @param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\n     * @return bool It signifies whether the transaction will be executed or not.\n     * @return byte Ethereum status code (ESC)\n     * @return bytes32 Application specific reason code\n     */\n    function canTransferFrom(\n        address _from,\n        address _to,\n        uint256 _value,\n        bytes memory _data\n    ) external view returns (bool, bytes1, bytes32) {\n        // Add a function to validate the `_data` parameter\n        if (_value > _allowed[_from][msg.sender])\n            return (false, 0x53, bytes32(0));\n        else if (_balances[_from] < _value) return (false, 0x52, bytes32(0));\n        else if (_to == address(0)) return (false, 0x57, bytes32(0));\n        else if (!KindMath.checkAdd(_balances[_to], _value))\n            return (false, 0x50, bytes32(0));\n        return (true, 0x51, bytes32(0));\n    }\n}\n",
  "sourcePath": "/mnt/c/Users/HP/Desktop/MODUS/contracts/tokens/ERC1594.sol",
  "ast": {
    "absolutePath": "project:/contracts/tokens/ERC1594.sol",
    "exportedSymbols": {
      "Context": [
        1851
      ],
      "ERC1594": [
        6595
      ],
      "ERC20Token": [
        7138
      ],
      "IERC1594": [
        5439
      ],
      "IERC20": [
        855
      ],
      "KindMath": [
        5549
      ],
      "Ownable": [
        112
      ],
      "SafeMath": [
        5333
      ]
    },
    "id": 6596,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6284,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:22"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IERC1594.sol",
        "file": "../interfaces/IERC1594.sol",
        "id": 6285,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6596,
        "sourceUnit": 5440,
        "src": "58:36:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/ERC20Token.sol",
        "file": "./ERC20Token.sol",
        "id": 6286,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6596,
        "sourceUnit": 7139,
        "src": "95:26:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/math/KindMath.sol",
        "file": "../math/KindMath.sol",
        "id": 6287,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6596,
        "sourceUnit": 5550,
        "src": "123:30:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 6288,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6596,
        "sourceUnit": 113,
        "src": "154:52:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6290,
              "name": "IERC1594",
              "nameLocations": [
                "346:8:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5439,
              "src": "346:8:22"
            },
            "id": 6291,
            "nodeType": "InheritanceSpecifier",
            "src": "346:8:22"
          },
          {
            "baseName": {
              "id": 6292,
              "name": "ERC20Token",
              "nameLocations": [
                "356:10:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7138,
              "src": "356:10:22"
            },
            "id": 6293,
            "nodeType": "InheritanceSpecifier",
            "src": "356:10:22"
          },
          {
            "baseName": {
              "id": 6294,
              "name": "Ownable",
              "nameLocations": [
                "368:7:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "368:7:22"
            },
            "id": 6295,
            "nodeType": "InheritanceSpecifier",
            "src": "368:7:22"
          }
        ],
        "canonicalName": "ERC1594",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6289,
          "nodeType": "StructuredDocumentation",
          "src": "208:117:22",
          "text": " @title Standard implementation of ERC1594 (Subset of ERC1400 https://github.com/ethereum/EIPs/issues/1411)"
        },
        "fullyImplemented": true,
        "id": 6595,
        "linearizedBaseContracts": [
          6595,
          112,
          1851,
          7138,
          855,
          5439
        ],
        "name": "ERC1594",
        "nameLocation": "335:7:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6298,
            "mutability": "mutable",
            "name": "issuance",
            "nameLocation": "781:8:22",
            "nodeType": "VariableDeclaration",
            "scope": 6595,
            "src": "767:29:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6296,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "767:4:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 6297,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "792:4:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6302,
              "nodeType": "Block",
              "src": "837:2:22",
              "statements": []
            },
            "documentation": {
              "id": 6299,
              "nodeType": "StructuredDocumentation",
              "src": "803:15:22",
              "text": "Constructor"
            },
            "id": 6303,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "834:2:22"
            },
            "returnParameters": {
              "id": 6301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "837:0:22"
            },
            "scope": 6595,
            "src": "823:16:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5345
            ],
            "body": {
              "id": 6320,
              "nodeType": "Block",
              "src": "1854:111:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6314,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1934:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1938:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1934:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6316,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6306,
                        "src": "1946:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6317,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6308,
                        "src": "1951:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6313,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6997,
                      "src": "1924:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1924:34:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6319,
                  "nodeType": "ExpressionStatement",
                  "src": "1924:34:22"
                }
              ]
            },
            "documentation": {
              "id": 6304,
              "nodeType": "StructuredDocumentation",
              "src": "845:890:22",
              "text": " @notice Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\n However for many types of approved transfers, maintaining an on-chain list of approved transfers can be\n cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\n approving a token transfer, and authorised entity provides signed data which further validates the transfer.\n @param _to address The address which you want to transfer to\n @param _value uint256 the amount of tokens to be transferred\n @param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\n for the token contract to interpret or record. This could be signed data authorising the transfer\n (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases."
            },
            "functionSelector": "2535f762",
            "id": 6321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferWithData",
            "nameLocation": "1749:16:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6306,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1783:3:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6321,
                  "src": "1775:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1775:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6308,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1804:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6321,
                  "src": "1796:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1796:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6310,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1833:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6321,
                  "src": "1820:18:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6309,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1820:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1765:79:22"
            },
            "returnParameters": {
              "id": 6312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1854:0:22"
            },
            "scope": 6595,
            "src": "1740:225:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5356
            ],
            "body": {
              "id": 6341,
              "nodeType": "Block",
              "src": "3200:122:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6334,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3284:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3288:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3284:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6336,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "3296:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6337,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6326,
                        "src": "3303:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6338,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6328,
                        "src": "3308:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6333,
                      "name": "_transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6837,
                      "src": "3270:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 6339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3270:45:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6340,
                  "nodeType": "ExpressionStatement",
                  "src": "3270:45:22"
                }
              ]
            },
            "documentation": {
              "id": 6322,
              "nodeType": "StructuredDocumentation",
              "src": "1971:1083:22",
              "text": " @notice Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\n However for many types of approved transfers, maintaining an on-chain list of approved transfers can be\n cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\n approving a token transfer, and authorised entity provides signed data which further validates the transfer.\n @dev `msg.sender` MUST have a sufficient `allowance` set and this `allowance` must be debited by the `_value`.\n @param _from address The address which you want to send tokens from\n @param _to address The address which you want to transfer to\n @param _value uint256 the amount of tokens to be transferred\n @param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\n for the token contract to interpret or record. This could be signed data authorising the transfer\n (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases."
            },
            "functionSelector": "ee532f31",
            "id": 6342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFromWithData",
            "nameLocation": "3068:20:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6324,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3106:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6342,
                  "src": "3098:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3098:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6326,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3129:3:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6342,
                  "src": "3121:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3121:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6328,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "3150:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6342,
                  "src": "3142:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6330,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "3179:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6342,
                  "src": "3166:18:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6329,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3166:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3088:102:22"
            },
            "returnParameters": {
              "id": 6332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3200:0:22"
            },
            "scope": 6595,
            "src": "3059:263:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5361
            ],
            "body": {
              "id": 6350,
              "nodeType": "Block",
              "src": "3854:32:22",
              "statements": [
                {
                  "expression": {
                    "id": 6348,
                    "name": "issuance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6298,
                    "src": "3871:8:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6347,
                  "id": 6349,
                  "nodeType": "Return",
                  "src": "3864:15:22"
                }
              ]
            },
            "documentation": {
              "id": 6343,
              "nodeType": "StructuredDocumentation",
              "src": "3328:470:22",
              "text": " @notice A security token issuer can specify that issuance has finished for the token\n (i.e. no new tokens can be minted or issued).\n @dev If a token returns FALSE for `isIssuable()` then it MUST always return FALSE in the future.\n If a token returns FALSE for `isIssuable()` then it MUST never allow additional tokens to be issued.\n @return bool `true` signifies the minting is allowed. While `false` denotes the end of minting"
            },
            "functionSelector": "2f1cae85",
            "id": 6351,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isIssuable",
            "nameLocation": "3812:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3822:2:22"
            },
            "returnParameters": {
              "id": 6347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6346,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6351,
                  "src": "3848:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6345,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3848:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3847:6:22"
            },
            "scope": 6595,
            "src": "3803:83:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5370
            ],
            "body": {
              "id": 6381,
              "nodeType": "Block",
              "src": "4688:215:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6364,
                        "name": "issuance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6298,
                        "src": "4766:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "49737375616e636520697320636c6f736564",
                        "id": 6365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4776:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e39bb54d3fb738d89d450dbb748102e9de58384e87cb1a8dc4d1a0d2343e16e",
                          "typeString": "literal_string \"Issuance is closed\""
                        },
                        "value": "Issuance is closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e39bb54d3fb738d89d450dbb748102e9de58384e87cb1a8dc4d1a0d2343e16e",
                          "typeString": "literal_string \"Issuance is closed\""
                        }
                      ],
                      "id": 6363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4758:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4758:39:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6367,
                  "nodeType": "ExpressionStatement",
                  "src": "4758:39:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6369,
                        "name": "_tokenHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6354,
                        "src": "4813:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6370,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6356,
                        "src": "4827:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6368,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7042,
                      "src": "4807:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4807:27:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6372,
                  "nodeType": "ExpressionStatement",
                  "src": "4807:27:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6374,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4856:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4860:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4856:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6376,
                        "name": "_tokenHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6354,
                        "src": "4868:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6377,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6356,
                        "src": "4882:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6378,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6358,
                        "src": "4890:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6373,
                      "name": "Issued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5428,
                      "src": "4849:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 6379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4849:47:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6380,
                  "nodeType": "EmitStatement",
                  "src": "4844:52:22"
                }
              ]
            },
            "documentation": {
              "id": 6352,
              "nodeType": "StructuredDocumentation",
              "src": "3892:669:22",
              "text": " @notice This function must be called to increase the total supply (Corresponds to mint function of ERC20).\n @dev It only be called by the token issuer or the operator defined by the issuer. ERC1594 doesn't have\n have the any logic related to operator but its superset ERC1400 have the operator logic and this function\n is allowed to call by the operator.\n @param _tokenHolder The account that will receive the created tokens (account should be whitelisted or KYCed).\n @param _value The amount of tokens need to be issued\n @param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer."
            },
            "functionSelector": "bb3acde9",
            "id": 6382,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6361,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6360,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4678:9:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "4678:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "4678:9:22"
              }
            ],
            "name": "issue",
            "nameLocation": "4575:5:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6354,
                  "mutability": "mutable",
                  "name": "_tokenHolder",
                  "nameLocation": "4598:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6382,
                  "src": "4590:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4590:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6356,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "4628:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6382,
                  "src": "4620:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4620:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6358,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "4657:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6382,
                  "src": "4644:18:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6357,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4644:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4580:88:22"
            },
            "returnParameters": {
              "id": 6362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4688:0:22"
            },
            "scope": 6595,
            "src": "4566:337:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5377
            ],
            "body": {
              "id": 6407,
              "nodeType": "Block",
              "src": "5437:164:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6391,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5513:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5517:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5513:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6393,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6385,
                        "src": "5525:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6390,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7095,
                      "src": "5507:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5507:25:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6395,
                  "nodeType": "ExpressionStatement",
                  "src": "5507:25:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5564:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5556:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6397,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5556:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5556:10:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6401,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5568:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5572:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5568:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6403,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6385,
                        "src": "5580:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6404,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6387,
                        "src": "5588:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6396,
                      "name": "Redeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5438,
                      "src": "5547:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 6405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5547:47:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6406,
                  "nodeType": "EmitStatement",
                  "src": "5542:52:22"
                }
              ]
            },
            "documentation": {
              "id": 6383,
              "nodeType": "StructuredDocumentation",
              "src": "4909:462:22",
              "text": " @notice This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\n using different ways that could be implemented with in the `redeem` function definition. But those implementations\n are out of the scope of the ERC1594.\n @param _value The amount of tokens need to be redeemed\n @param _data The `bytes _data` it can be used in the token contract to authenticate the redemption."
            },
            "functionSelector": "e77c646d",
            "id": 6408,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "5385:6:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6385,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5400:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6408,
                  "src": "5392:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5392:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6387,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5421:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6408,
                  "src": "5408:18:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6386,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5408:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5391:36:22"
            },
            "returnParameters": {
              "id": 6389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5437:0:22"
            },
            "scope": 6595,
            "src": "5376:225:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5386
            ],
            "body": {
              "id": 6431,
              "nodeType": "Block",
              "src": "6302:172:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6419,
                        "name": "_tokenHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6411,
                        "src": "6382:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6420,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6413,
                        "src": "6396:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6418,
                      "name": "_burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7137,
                      "src": "6372:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6372:31:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6422,
                  "nodeType": "ExpressionStatement",
                  "src": "6372:31:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6424,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6427:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6431:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6427:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6426,
                        "name": "_tokenHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6411,
                        "src": "6439:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6427,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6413,
                        "src": "6453:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6428,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6415,
                        "src": "6461:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6423,
                      "name": "Redeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5438,
                      "src": "6418:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 6429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6418:49:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6430,
                  "nodeType": "EmitStatement",
                  "src": "6413:54:22"
                }
              ]
            },
            "documentation": {
              "id": 6409,
              "nodeType": "StructuredDocumentation",
              "src": "5607:573:22",
              "text": " @notice This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\n using different ways that could be implemented with in the `redeem` function definition. But those implementations\n are out of the scope of the ERC1594.\n @dev It is analogy to `transferFrom`\n @param _tokenHolder The account whose tokens gets redeemed.\n @param _value The amount of tokens need to be redeemed\n @param _data The `bytes _data` it can be used in the token contract to authenticate the redemption."
            },
            "functionSelector": "9675193c",
            "id": 6432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemFrom",
            "nameLocation": "6194:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6411,
                  "mutability": "mutable",
                  "name": "_tokenHolder",
                  "nameLocation": "6222:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6432,
                  "src": "6214:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6214:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6413,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "6252:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6432,
                  "src": "6244:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6244:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6415,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6281:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6432,
                  "src": "6268:18:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6414,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6268:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6204:88:22"
            },
            "returnParameters": {
              "id": 6417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6302:0:22"
            },
            "scope": 6595,
            "src": "6185:289:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5401
            ],
            "body": {
              "id": 6503,
              "nodeType": "Block",
              "src": "7418:363:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 6448,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6666,
                        "src": "7492:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6451,
                      "indexExpression": {
                        "expression": {
                          "id": 6449,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7502:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7506:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7502:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7492:21:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6452,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6437,
                      "src": "7516:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7492:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 6467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6462,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6435,
                        "src": "7575:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7590:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7582:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6463,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7582:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7582:10:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7575:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "id": 6483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7645:42:22",
                        "subExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 6478,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6666,
                                "src": "7664:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 6480,
                              "indexExpression": {
                                "id": 6479,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6435,
                                "src": "7674:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7664:14:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 6481,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6437,
                              "src": "7680:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 6476,
                              "name": "KindMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5549,
                              "src": "7646:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_KindMath_$5549_$",
                                "typeString": "type(library KindMath)"
                              }
                            },
                            "id": 6477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7655:8:22",
                            "memberName": "checkAdd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5548,
                            "src": "7646:17:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256,uint256) pure returns (bool)"
                            }
                          },
                          "id": 6482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7646:41:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 6492,
                      "nodeType": "IfStatement",
                      "src": "7641:92:22",
                      "trueBody": {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "66616c7365",
                              "id": 6484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7709:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "30783530",
                              "id": 6485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7716:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_80_by_1",
                                "typeString": "int_const 80"
                              },
                              "value": "0x50"
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 6488,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7730:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 6487,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7722:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 6486,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7722:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 6489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7722:10:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "id": 6490,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7708:25:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_rational_80_by_1_$_t_bytes32_$",
                            "typeString": "tuple(bool,int_const 80,bytes32)"
                          }
                        },
                        "functionReturnParameters": 6447,
                        "id": 6491,
                        "nodeType": "Return",
                        "src": "7701:32:22"
                      }
                    },
                    "id": 6493,
                    "nodeType": "IfStatement",
                    "src": "7571:162:22",
                    "trueBody": {
                      "expression": {
                        "components": [
                          {
                            "hexValue": "66616c7365",
                            "id": 6468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7602:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "30783537",
                            "id": 6469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7609:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_87_by_1",
                              "typeString": "int_const 87"
                            },
                            "value": "0x57"
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 6472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7623:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 6471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7615:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 6470,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "7615:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7615:10:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "id": 6474,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7601:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_rational_87_by_1_$_t_bytes32_$",
                          "typeString": "tuple(bool,int_const 87,bytes32)"
                        }
                      },
                      "functionReturnParameters": 6447,
                      "id": 6475,
                      "nodeType": "Return",
                      "src": "7594:32:22"
                    }
                  },
                  "id": 6494,
                  "nodeType": "IfStatement",
                  "src": "7488:245:22",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "66616c7365",
                          "id": 6454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7532:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30783532",
                          "id": 6455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7539:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_82_by_1",
                            "typeString": "int_const 82"
                          },
                          "value": "0x52"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7553:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7545:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 6456,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "7545:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7545:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 6460,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7531:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_rational_82_by_1_$_t_bytes32_$",
                        "typeString": "tuple(bool,int_const 82,bytes32)"
                      }
                    },
                    "functionReturnParameters": 6447,
                    "id": 6461,
                    "nodeType": "Return",
                    "src": "7524:32:22"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 6495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7751:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30783531",
                        "id": 6496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7757:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_81_by_1",
                          "typeString": "int_const 81"
                        },
                        "value": "0x51"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7771:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7763:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 6497,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "7763:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7763:10:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 6501,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7750:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_rational_81_by_1_$_t_bytes32_$",
                      "typeString": "tuple(bool,int_const 81,bytes32)"
                    }
                  },
                  "functionReturnParameters": 6447,
                  "id": 6502,
                  "nodeType": "Return",
                  "src": "7743:31:22"
                }
              ]
            },
            "documentation": {
              "id": 6433,
              "nodeType": "StructuredDocumentation",
              "src": "6480:787:22",
              "text": " @notice Transfers of securities may fail for a number of reasons. So this function will used to understand the\n cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped\n with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\n @param _to address The address which you want to transfer to\n @param _value uint256 the amount of tokens to be transferred\n @param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\n @return bool It signifies whether the transaction will be executed or not.\n @return byte Ethereum status code (ESC)\n @return bytes32 Application specific reason code"
            },
            "functionSelector": "1badb25c",
            "id": 6504,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canTransfer",
            "nameLocation": "7281:11:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6435,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "7310:3:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6504,
                  "src": "7302:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7302:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6437,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "7331:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6504,
                  "src": "7323:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7323:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6439,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "7360:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6504,
                  "src": "7347:18:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6438,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7347:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7292:79:22"
            },
            "returnParameters": {
              "id": 6447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6442,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6504,
                  "src": "7395:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6441,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7395:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6444,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6504,
                  "src": "7401:6:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 6443,
                    "name": "bytes1",
                    "nodeType": "ElementaryTypeName",
                    "src": "7401:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6446,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6504,
                  "src": "7409:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6445,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7409:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7394:23:22"
            },
            "scope": 6595,
            "src": "7272:509:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5418
            ],
            "body": {
              "id": 6593,
              "nodeType": "Block",
              "src": "8827:459:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6522,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6511,
                      "src": "8901:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6523,
                          "name": "_allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6672,
                          "src": "8910:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 6525,
                        "indexExpression": {
                          "id": 6524,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6507,
                          "src": "8919:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8910:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6528,
                      "indexExpression": {
                        "expression": {
                          "id": 6526,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8926:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8930:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8926:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8910:27:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8901:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 6538,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6666,
                          "src": "9002:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 6540,
                        "indexExpression": {
                          "id": 6539,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6507,
                          "src": "9012:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9002:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 6541,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6511,
                        "src": "9021:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9002:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6551,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6509,
                          "src": "9080:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9095:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9087:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6552,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9087:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9087:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9080:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "id": 6572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "9150:42:22",
                          "subExpression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 6567,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6666,
                                  "src": "9169:9:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 6569,
                                "indexExpression": {
                                  "id": 6568,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6509,
                                  "src": "9179:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9169:14:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 6570,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6511,
                                "src": "9185:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 6565,
                                "name": "KindMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5549,
                                "src": "9151:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_KindMath_$5549_$",
                                  "typeString": "type(library KindMath)"
                                }
                              },
                              "id": 6566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9160:8:22",
                              "memberName": "checkAdd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5548,
                              "src": "9151:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (uint256,uint256) pure returns (bool)"
                              }
                            },
                            "id": 6571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9151:41:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6581,
                        "nodeType": "IfStatement",
                        "src": "9146:92:22",
                        "trueBody": {
                          "expression": {
                            "components": [
                              {
                                "hexValue": "66616c7365",
                                "id": 6573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9214:5:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "hexValue": "30783530",
                                "id": 6574,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9221:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_80_by_1",
                                  "typeString": "int_const 80"
                                },
                                "value": "0x50"
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 6577,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9235:1:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 6576,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9227:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 6575,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9227:7:22",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 6578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9227:10:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "id": 6579,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9213:25:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_rational_80_by_1_$_t_bytes32_$",
                              "typeString": "tuple(bool,int_const 80,bytes32)"
                            }
                          },
                          "functionReturnParameters": 6521,
                          "id": 6580,
                          "nodeType": "Return",
                          "src": "9206:32:22"
                        }
                      },
                      "id": 6582,
                      "nodeType": "IfStatement",
                      "src": "9076:162:22",
                      "trueBody": {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "66616c7365",
                              "id": 6557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9107:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "30783537",
                              "id": 6558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9114:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_87_by_1",
                                "typeString": "int_const 87"
                              },
                              "value": "0x57"
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 6561,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9128:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 6560,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9120:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 6559,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9120:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 6562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9120:10:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "id": 6563,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9106:25:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_rational_87_by_1_$_t_bytes32_$",
                            "typeString": "tuple(bool,int_const 87,bytes32)"
                          }
                        },
                        "functionReturnParameters": 6521,
                        "id": 6564,
                        "nodeType": "Return",
                        "src": "9099:32:22"
                      }
                    },
                    "id": 6583,
                    "nodeType": "IfStatement",
                    "src": "8998:240:22",
                    "trueBody": {
                      "expression": {
                        "components": [
                          {
                            "hexValue": "66616c7365",
                            "id": 6543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9037:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "30783532",
                            "id": 6544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9044:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_82_by_1",
                              "typeString": "int_const 82"
                            },
                            "value": "0x52"
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 6547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9058:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 6546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9050:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 6545,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "9050:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9050:10:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "id": 6549,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9036:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_rational_82_by_1_$_t_bytes32_$",
                          "typeString": "tuple(bool,int_const 82,bytes32)"
                        }
                      },
                      "functionReturnParameters": 6521,
                      "id": 6550,
                      "nodeType": "Return",
                      "src": "9029:32:22"
                    }
                  },
                  "id": 6584,
                  "nodeType": "IfStatement",
                  "src": "8897:341:22",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "66616c7365",
                          "id": 6530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8959:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30783533",
                          "id": 6531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8966:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_83_by_1",
                            "typeString": "int_const 83"
                          },
                          "value": "0x53"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8980:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8972:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 6532,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8972:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8972:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 6536,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8958:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_rational_83_by_1_$_t_bytes32_$",
                        "typeString": "tuple(bool,int_const 83,bytes32)"
                      }
                    },
                    "functionReturnParameters": 6521,
                    "id": 6537,
                    "nodeType": "Return",
                    "src": "8951:32:22"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 6585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9256:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30783531",
                        "id": 6586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9262:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_81_by_1",
                          "typeString": "int_const 81"
                        },
                        "value": "0x51"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9276:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9268:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 6587,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "9268:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9268:10:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 6591,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9255:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_rational_81_by_1_$_t_bytes32_$",
                      "typeString": "tuple(bool,int_const 81,bytes32)"
                    }
                  },
                  "functionReturnParameters": 6521,
                  "id": 6592,
                  "nodeType": "Return",
                  "src": "9248:31:22"
                }
              ]
            },
            "documentation": {
              "id": 6505,
              "nodeType": "StructuredDocumentation",
              "src": "7787:862:22",
              "text": " @notice Transfers of securities may fail for a number of reasons. So this function will used to understand the\n cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped\n with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\n @param _from address The address which you want to send tokens from\n @param _to address The address which you want to transfer to\n @param _value uint256 the amount of tokens to be transferred\n @param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\n @return bool It signifies whether the transaction will be executed or not.\n @return byte Ethereum status code (ESC)\n @return bytes32 Application specific reason code"
            },
            "functionSelector": "122eb575",
            "id": 6594,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canTransferFrom",
            "nameLocation": "8663:15:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6507,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "8696:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6594,
                  "src": "8688:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8688:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6509,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8719:3:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6594,
                  "src": "8711:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8711:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6511,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "8740:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6594,
                  "src": "8732:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8732:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6513,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8769:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6594,
                  "src": "8756:18:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6512,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8756:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8678:102:22"
            },
            "returnParameters": {
              "id": 6521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6516,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6594,
                  "src": "8804:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6515,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8804:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6518,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6594,
                  "src": "8810:6:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 6517,
                    "name": "bytes1",
                    "nodeType": "ElementaryTypeName",
                    "src": "8810:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6520,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6594,
                  "src": "8818:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6519,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8818:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8803:23:22"
            },
            "scope": 6595,
            "src": "8654:632:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6596,
        "src": "326:8962:22",
        "usedErrors": []
      }
    ],
    "src": "32:9257:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.16+commit.07a7930e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-12-20T13:31:13.912Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "returns": {
          "_0": "A uint256 specifying the amount of tokens still available for the spender."
        }
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "returns": {
          "_0": "An uint256 representing the amount owned by the passed address."
        }
      },
      "canTransfer(address,uint256,bytes)": {
        "params": {
          "_data": "The `bytes _data` allows arbitrary data to be submitted alongside the transfer.",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amount of tokens to be transferred"
        },
        "returns": {
          "_0": "bool It signifies whether the transaction will be executed or not.",
          "_1": "byte Ethereum status code (ESC)",
          "_2": "bytes32 Application specific reason code"
        }
      },
      "canTransferFrom(address,address,uint256,bytes)": {
        "params": {
          "_data": "The `bytes _data` allows arbitrary data to be submitted alongside the transfer.",
          "_from": "address The address which you want to send tokens from",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amount of tokens to be transferred"
        },
        "returns": {
          "_0": "bool It signifies whether the transaction will be executed or not.",
          "_1": "byte Ethereum status code (ESC)",
          "_2": "bytes32 Application specific reason code"
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isIssuable()": {
        "details": "If a token returns FALSE for `isIssuable()` then it MUST always return FALSE in the future. If a token returns FALSE for `isIssuable()` then it MUST never allow additional tokens to be issued.",
        "returns": {
          "_0": "bool `true` signifies the minting is allowed. While `false` denotes the end of minting"
        }
      },
      "issue(address,uint256,bytes)": {
        "details": "It only be called by the token issuer or the operator defined by the issuer. ERC1594 doesn't have have the any logic related to operator but its superset ERC1400 have the operator logic and this function is allowed to call by the operator.",
        "params": {
          "_data": "The `bytes _data` allows arbitrary data to be submitted alongside the transfer.",
          "_tokenHolder": "The account that will receive the created tokens (account should be whitelisted or KYCed).",
          "_value": "The amount of tokens need to be issued"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "redeem(uint256,bytes)": {
        "params": {
          "_data": "The `bytes _data` it can be used in the token contract to authenticate the redemption.",
          "_value": "The amount of tokens need to be redeemed"
        }
      },
      "redeemFrom(address,uint256,bytes)": {
        "details": "It is analogy to `transferFrom`",
        "params": {
          "_data": "The `bytes _data` it can be used in the token contract to authenticate the redemption.",
          "_tokenHolder": "The account whose tokens gets redeemed.",
          "_value": "The amount of tokens need to be redeemed"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferFromWithData(address,address,uint256,bytes)": {
        "details": "`msg.sender` MUST have a sufficient `allowance` set and this `allowance` must be debited by the `_value`.",
        "params": {
          "_data": "The `bytes _data` allows arbitrary data to be submitted alongside the transfer. for the token contract to interpret or record. This could be signed data authorising the transfer (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.",
          "_from": "address The address which you want to send tokens from",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transferWithData(address,uint256,bytes)": {
        "params": {
          "_data": "The `bytes _data` allows arbitrary data to be submitted alongside the transfer. for the token contract to interpret or record. This could be signed data authorising the transfer (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "Standard implementation of ERC1594 (Subset of ERC1400 https://github.com/ethereum/EIPs/issues/1411)",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "canTransfer(address,uint256,bytes)": {
        "notice": "Transfers of securities may fail for a number of reasons. So this function will used to understand the cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain"
      },
      "canTransferFrom(address,address,uint256,bytes)": {
        "notice": "Transfers of securities may fail for a number of reasons. So this function will used to understand the cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain"
      },
      "constructor": {
        "notice": "Constructor"
      },
      "isIssuable()": {
        "notice": "A security token issuer can specify that issuance has finished for the token (i.e. no new tokens can be minted or issued)."
      },
      "issue(address,uint256,bytes)": {
        "notice": "This function must be called to increase the total supply (Corresponds to mint function of ERC20)."
      },
      "redeem(uint256,bytes)": {
        "notice": "This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize using different ways that could be implemented with in the `redeem` function definition. But those implementations are out of the scope of the ERC1594."
      },
      "redeemFrom(address,uint256,bytes)": {
        "notice": "This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize using different ways that could be implemented with in the `redeem` function definition. But those implementations are out of the scope of the ERC1594."
      },
      "transferFromWithData(address,address,uint256,bytes)": {
        "notice": "Transfer restrictions can take many forms and typically involve on-chain rules or whitelists. However for many types of approved transfers, maintaining an on-chain list of approved transfers can be cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder approving a token transfer, and authorised entity provides signed data which further validates the transfer."
      },
      "transferWithData(address,uint256,bytes)": {
        "notice": "Transfer restrictions can take many forms and typically involve on-chain rules or whitelists. However for many types of approved transfers, maintaining an on-chain list of approved transfers can be cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder approving a token transfer, and authorised entity provides signed data which further validates the transfer."
      }
    },
    "version": 1
  }
}